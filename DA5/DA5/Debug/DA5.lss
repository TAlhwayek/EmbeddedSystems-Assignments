
DA5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ccc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000d40  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d40  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dcc  00000000  00000000  00000df8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aaa  00000000  00000000  00001bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f8  00000000  00000000  0000266e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  00002b68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055e  00000000  00000000  00002c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000026d  00000000  00000000  0000316a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000033d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__ctors_end>
   4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
   8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
   c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  10:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  14:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  18:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  1c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  30:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  34:	0c 94 0b 01 	jmp	0x216	; 0x216 <__vector_13>
  38:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  3c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  40:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  44:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  48:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  4c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  54:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  58:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  5c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  60:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  64:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  68:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  6c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  70:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  74:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  78:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  7c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  80:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  84:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  88:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  8c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  90:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  94:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  98:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  9c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  a0:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  a4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  a8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  ac:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
  b0:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>

000000b4 <__trampolines_end>:
  b4:	00 40       	sbci	r16, 0x00	; 0
  b6:	7a 10       	cpse	r7, r10
  b8:	f3 5a       	subi	r31, 0xA3	; 163
  ba:	00 a0       	ldd	r0, Z+32	; 0x20
  bc:	72 4e       	sbci	r23, 0xE2	; 226
  be:	18 09       	sbc	r17, r8
  c0:	00 10       	cpse	r0, r0
  c2:	a5 d4       	rcall	.+2378   	; 0xa0e <__stack+0x10f>
  c4:	e8 00       	.word	0x00e8	; ????
  c6:	00 e8       	ldi	r16, 0x80	; 128
  c8:	76 48       	sbci	r23, 0x86	; 134
  ca:	17 00       	.word	0x0017	; ????
  cc:	00 e4       	ldi	r16, 0x40	; 64
  ce:	0b 54       	subi	r16, 0x4B	; 75
  d0:	02 00       	.word	0x0002	; ????
  d2:	00 ca       	rjmp	.-3072   	; 0xfffff4d4 <__eeprom_end+0xff7ef4d4>
  d4:	9a 3b       	cpi	r25, 0xBA	; 186
  d6:	00 00       	nop
  d8:	00 e1       	ldi	r16, 0x10	; 16
  da:	f5 05       	cpc	r31, r5
  dc:	00 00       	nop
  de:	80 96       	adiw	r24, 0x20	; 32
  e0:	98 00       	.word	0x0098	; ????
  e2:	00 00       	nop
  e4:	40 42       	sbci	r20, 0x20	; 32
  e6:	0f 00       	.word	0x000f	; ????
  e8:	00 00       	nop
  ea:	a0 86       	std	Z+8, r10	; 0x08
  ec:	01 00       	.word	0x0001	; ????
  ee:	00 00       	nop
  f0:	10 27       	eor	r17, r16
  f2:	00 00       	nop
  f4:	00 00       	nop
  f6:	e8 03       	fmulsu	r22, r16
  f8:	00 00       	nop
  fa:	00 00       	nop
  fc:	64 00       	.word	0x0064	; ????
  fe:	00 00       	nop
 100:	00 00       	nop
 102:	0a 00       	.word	0x000a	; ????
 104:	00 00       	nop
 106:	00 00       	nop
 108:	01 00       	.word	0x0001	; ????
 10a:	00 00       	nop
 10c:	00 00       	nop
 10e:	2c 76       	andi	r18, 0x6C	; 108
 110:	d8 88       	ldd	r13, Y+16	; 0x10
 112:	dc 67       	ori	r29, 0x7C	; 124
 114:	4f 08       	sbc	r4, r15
 116:	23 df       	rcall	.-442    	; 0xffffff5e <__eeprom_end+0xff7eff5e>
 118:	c1 df       	rcall	.-126    	; 0x9c <__SREG__+0x5d>
 11a:	ae 59       	subi	r26, 0x9E	; 158
 11c:	e1 b1       	in	r30, 0x01	; 1
 11e:	b7 96       	adiw	r30, 0x27	; 39
 120:	e5 e3       	ldi	r30, 0x35	; 53
 122:	e4 53       	subi	r30, 0x34	; 52
 124:	c6 3a       	cpi	r28, 0xA6	; 166
 126:	e6 51       	subi	r30, 0x16	; 22
 128:	99 76       	andi	r25, 0x69	; 105
 12a:	96 e8       	ldi	r25, 0x86	; 134
 12c:	e6 c2       	rjmp	.+1484   	; 0x6fa <__fp_pscA+0x2>
 12e:	84 26       	eor	r8, r20
 130:	eb 89       	ldd	r30, Y+19	; 0x13
 132:	8c 9b       	sbis	0x11, 4	; 17
 134:	62 ed       	ldi	r22, 0xD2	; 210
 136:	40 7c       	andi	r20, 0xC0	; 192
 138:	6f fc       	.word	0xfc6f	; ????
 13a:	ef bc       	out	0x2f, r14	; 47
 13c:	9c 9f       	mul	r25, r28
 13e:	40 f2       	brcs	.-112    	; 0xd0 <__trampolines_end+0x1c>
 140:	ba a5       	ldd	r27, Y+42	; 0x2a
 142:	6f a5       	ldd	r22, Y+47	; 0x2f
 144:	f4 90       	lpm	r15, Z
 146:	05 5a       	subi	r16, 0xA5	; 165
 148:	2a f7       	brpl	.-54     	; 0x114 <__trampolines_end+0x60>
 14a:	5c 93       	st	X, r21
 14c:	6b 6c       	ori	r22, 0xCB	; 203
 14e:	f9 67       	ori	r31, 0x79	; 121
 150:	6d c1       	rjmp	.+730    	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 152:	1b fc       	.word	0xfc1b	; ????
 154:	e0 e4       	ldi	r30, 0x40	; 64
 156:	0d 47       	sbci	r16, 0x7D	; 125
 158:	fe f5       	brtc	.+126    	; 0x1d8 <USART_init+0x2>
 15a:	20 e6       	ldi	r18, 0x60	; 96
 15c:	b5 00       	.word	0x00b5	; ????
 15e:	d0 ed       	ldi	r29, 0xD0	; 208
 160:	90 2e       	mov	r9, r16
 162:	03 00       	.word	0x0003	; ????
 164:	94 35       	cpi	r25, 0x54	; 84
 166:	77 05       	cpc	r23, r7
 168:	00 80       	ld	r0, Z
 16a:	84 1e       	adc	r8, r20
 16c:	08 00       	.word	0x0008	; ????
 16e:	00 20       	and	r0, r0
 170:	4e 0a       	sbc	r4, r30
 172:	00 00       	nop
 174:	00 c8       	rjmp	.-4096   	; 0xfffff176 <__eeprom_end+0xff7ef176>
 176:	0c 33       	cpi	r16, 0x3C	; 60
 178:	33 33       	cpi	r19, 0x33	; 51
 17a:	33 0f       	add	r19, r19
 17c:	98 6e       	ori	r25, 0xE8	; 232
 17e:	12 83       	std	Z+2, r17	; 0x02
 180:	11 41       	sbci	r17, 0x11	; 17
 182:	ef 8d       	ldd	r30, Y+31	; 0x1f
 184:	21 14       	cp	r2, r1
 186:	89 3b       	cpi	r24, 0xB9	; 185
 188:	e6 55       	subi	r30, 0x56	; 86
 18a:	16 cf       	rjmp	.-468    	; 0xffffffb8 <__eeprom_end+0xff7effb8>
 18c:	fe e6       	ldi	r31, 0x6E	; 110
 18e:	db 18       	sub	r13, r11
 190:	d1 84       	ldd	r13, Z+9	; 0x09
 192:	4b 38       	cpi	r20, 0x8B	; 139
 194:	1b f7       	brvc	.-58     	; 0x15c <__trampolines_end+0xa8>
 196:	7c 1d       	adc	r23, r12
 198:	90 1d       	adc	r25, r0
 19a:	a4 bb       	out	0x14, r26	; 20
 19c:	e4 24       	eor	r14, r4
 19e:	20 32       	cpi	r18, 0x20	; 32
 1a0:	84 72       	andi	r24, 0x24	; 36
 1a2:	5e 22       	and	r5, r30
 1a4:	81 00       	.word	0x0081	; ????
 1a6:	c9 f1       	breq	.+114    	; 0x21a <__vector_13+0x4>
 1a8:	24 ec       	ldi	r18, 0xC4	; 196
 1aa:	a1 e5       	ldi	r26, 0x51	; 81
 1ac:	3d 27       	eor	r19, r29

000001ae <__ctors_end>:
 1ae:	11 24       	eor	r1, r1
 1b0:	1f be       	out	0x3f, r1	; 63
 1b2:	cf ef       	ldi	r28, 0xFF	; 255
 1b4:	d8 e0       	ldi	r29, 0x08	; 8
 1b6:	de bf       	out	0x3e, r29	; 62
 1b8:	cd bf       	out	0x3d, r28	; 61

000001ba <__do_clear_bss>:
 1ba:	21 e0       	ldi	r18, 0x01	; 1
 1bc:	a0 e0       	ldi	r26, 0x00	; 0
 1be:	b1 e0       	ldi	r27, 0x01	; 1
 1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <.do_clear_bss_start>

000001c2 <.do_clear_bss_loop>:
 1c2:	1d 92       	st	X+, r1

000001c4 <.do_clear_bss_start>:
 1c4:	a2 30       	cpi	r26, 0x02	; 2
 1c6:	b2 07       	cpc	r27, r18
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <.do_clear_bss_loop>
 1ca:	0e 94 32 01 	call	0x264	; 0x264 <main>
 1ce:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <_exit>

000001d2 <__bad_interrupt>:
 1d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d6 <USART_init>:
#define BAUD_PRESCALLER (((F_CPU / (BAUDRATE * 16UL))) - 1)
char buffer[5];                //Output of the itoa function

void USART_init(void){
	
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
 1d6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
 1da:	87 e6       	ldi	r24, 0x67	; 103
 1dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1<<TXEN0);
 1e0:	88 e0       	ldi	r24, 0x08	; 8
 1e2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (3<<UCSZ00);
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1ec:	08 95       	ret

000001ee <USART_send>:
}

void USART_send( unsigned char data){
	
	while(!(UCSR0A & (1<<UDRE0)));
 1ee:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1f2:	95 ff       	sbrs	r25, 5
 1f4:	fc cf       	rjmp	.-8      	; 0x1ee <USART_send>
	UDR0 = data;
 1f6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1fa:	08 95       	ret

000001fc <USART_putstring>:
	
}

void USART_putstring(char* StringPtr){
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	ec 01       	movw	r28, r24
	
	while(*StringPtr != 0x00){
 202:	03 c0       	rjmp	.+6      	; 0x20a <USART_putstring+0xe>
		USART_send(*StringPtr);
 204:	0e 94 f7 00 	call	0x1ee	; 0x1ee <USART_send>
	StringPtr++;}
 208:	21 96       	adiw	r28, 0x01	; 1
	
}

void USART_putstring(char* StringPtr){
	
	while(*StringPtr != 0x00){
 20a:	88 81       	ld	r24, Y
 20c:	81 11       	cpse	r24, r1
 20e:	fa cf       	rjmp	.-12     	; 0x204 <USART_putstring+0x8>
		USART_send(*StringPtr);
	StringPtr++;}
	
}
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	08 95       	ret

00000216 <__vector_13>:
#define  Trigger_pin	PB1	/* Trigger pin */

int TimerOverflow = 0;		// Initialize timer overflow counter

ISR(TIMER1_OVF_vect)
{
 216:	1f 92       	push	r1
 218:	0f 92       	push	r0
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	0f 92       	push	r0
 21e:	11 24       	eor	r1, r1
 220:	8f 93       	push	r24
 222:	9f 93       	push	r25
	TimerOverflow++;		/* Increment Timer Overflow count */
 224:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 228:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 22c:	01 96       	adiw	r24, 0x01	; 1
 22e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 232:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
}
 236:	9f 91       	pop	r25
 238:	8f 91       	pop	r24
 23a:	0f 90       	pop	r0
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	0f 90       	pop	r0
 240:	1f 90       	pop	r1
 242:	18 95       	reti

00000244 <Wait>:

//Simple Wait Function
void Wait()
{
	uint8_t i;
	for(i=0;i<50;i++)
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	0b c0       	rjmp	.+22     	; 0x25e <Wait+0x1a>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	fc 01       	movw	r30, r24
 24e:	31 97       	sbiw	r30, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <Wait+0xa>
 252:	fc 01       	movw	r30, r24
 254:	31 97       	sbiw	r30, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <Wait+0x10>
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <Wait+0x14>
 25c:	2f 5f       	subi	r18, 0xFF	; 255
 25e:	22 33       	cpi	r18, 0x32	; 50
 260:	98 f3       	brcs	.-26     	; 0x248 <Wait+0x4>
		_delay_loop_2(0);
		_delay_loop_2(0);
		_delay_loop_2(0);
	}

}
 262:	08 95       	ret

00000264 <main>:


int main(void)
{
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	cd b7       	in	r28, 0x3d	; 61
 26a:	de b7       	in	r29, 0x3e	; 62
 26c:	a8 97       	sbiw	r28, 0x28	; 40
 26e:	0f b6       	in	r0, 0x3f	; 63
 270:	f8 94       	cli
 272:	de bf       	out	0x3e, r29	; 62
 274:	0f be       	out	0x3f, r0	; 63
 276:	cd bf       	out	0x3d, r28	; 61
	char result[20];			// Used to send everything into USART
	long count;
	double distance;			// Used for distance
	double angle = 0;			// Used for angle
	
	DDRB = 0x02;			/* Make trigger pin as output */
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	84 b9       	out	0x04, r24	; 4
	/* PB0 is the Echo Pin & PB1 is the Trigger in */
	USART_init();
 27c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <USART_init>
	
	//Configure TIMER3 for Servo Motor
	TCCR3A|=(1<<COM3A1)|(1<<COM3B1)|(1<<WGM31);        //NON Inverted PWM
 280:	e0 e9       	ldi	r30, 0x90	; 144
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	82 6a       	ori	r24, 0xA2	; 162
 288:	80 83       	st	Z, r24
	TCCR3B|=(1<<WGM33)|(1<<WGM32)|(1<<CS31)|(1<<CS30); //PRESCALER=64 MODE 14(FAST PWM)
 28a:	e1 e9       	ldi	r30, 0x91	; 145
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	8b 61       	ori	r24, 0x1B	; 27
 292:	80 83       	st	Z, r24
	ICR3=4999;  //fPWM=50Hz (Period = 20ms Standard).
 294:	87 e8       	ldi	r24, 0x87	; 135
 296:	93 e1       	ldi	r25, 0x13	; 19
 298:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x7f8097>
 29c:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x7f8096>
	DDRD|=(1<<PD0);   //PWM Pins as Out
 2a0:	8a b1       	in	r24, 0x0a	; 10
 2a2:	81 60       	ori	r24, 0x01	; 1
 2a4:	8a b9       	out	0x0a, r24	; 10
	
	sei();					/* Enable global interrupt */
 2a6:	78 94       	sei
	TIMSK1 = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	TCCR1A = 0;				/* Set all bit to zero Normal operation */
 2ae:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>

	while(1)
	{

		// FUNCTIONAL SERVO CODE
		OCR3A=97;   //0 degrees
 2b2:	81 e6       	ldi	r24, 0x61	; 97
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7f8099>
 2ba:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7f8098>
		Wait();
 2be:	0e 94 22 01 	call	0x244	; 0x244 <Wait>
		angle = 0; // Reset angle each time
		// Keep looping until 180 degrees
		for(int i = 0; i < 88; i++) {
 2c2:	a1 2c       	mov	r10, r1
 2c4:	b1 2c       	mov	r11, r1
	{

		// FUNCTIONAL SERVO CODE
		OCR3A=97;   //0 degrees
		Wait();
		angle = 0; // Reset angle each time
 2c6:	c1 2c       	mov	r12, r1
 2c8:	d1 2c       	mov	r13, r1
 2ca:	76 01       	movw	r14, r12
		// Keep looping until 180 degrees
		for(int i = 0; i < 88; i++) {
 2cc:	c1 c0       	rjmp	.+386    	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
			OCR3A += 5;					// Increment OCR3A by 5 each loop
 2ce:	e8 e9       	ldi	r30, 0x98	; 152
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	80 81       	ld	r24, Z
 2d4:	91 81       	ldd	r25, Z+1	; 0x01
 2d6:	05 96       	adiw	r24, 0x05	; 5
 2d8:	91 83       	std	Z+1, r25	; 0x01
 2da:	80 83       	st	Z, r24
				
			PORTB |= (1 << Trigger_pin);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
 2dc:	85 b1       	in	r24, 0x05	; 5
 2de:	82 60       	ori	r24, 0x02	; 2
 2e0:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e2:	25 e3       	ldi	r18, 0x35	; 53
 2e4:	2a 95       	dec	r18
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <main+0x80>
 2e8:	00 00       	nop
			_delay_us(10);
			PORTB &= (~(1 << Trigger_pin));
 2ea:	85 b1       	in	r24, 0x05	; 5
 2ec:	8d 7f       	andi	r24, 0xFD	; 253
 2ee:	85 b9       	out	0x05, r24	; 5
			
			TCNT1 = 0;			/* Clear Timer counter */
 2f0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 2f4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
			TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
 2f8:	81 e4       	ldi	r24, 0x41	; 65
 2fa:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
			TIFR1 = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 2fe:	80 e2       	ldi	r24, 0x20	; 32
 300:	86 bb       	out	0x16, r24	; 22
			TIFR1 = 1<<TOV1;		/* Clear Timer Overflow flag */
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	86 bb       	out	0x16, r24	; 22

			/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */
			
			while ((TIFR1 & (1 << ICF1)) == 0);	/* Wait for rising edge */
 306:	b5 9b       	sbis	0x16, 5	; 22
 308:	fe cf       	rjmp	.-4      	; 0x306 <main+0xa2>
			TCNT1 = 0;			/* Clear Timer counter */
 30a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 30e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
			TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
			TIFR1 = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 318:	90 e2       	ldi	r25, 0x20	; 32
 31a:	96 bb       	out	0x16, r25	; 22
			TIFR1 = 1<<TOV1;		/* Clear Timer Overflow flag */
 31c:	86 bb       	out	0x16, r24	; 22
			TimerOverflow = 0;	/* Clear Timer overflow count */
 31e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 322:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>

			while ((TIFR1 & (1 << ICF1)) == 0); /* Wait for falling edge */
 326:	b5 9b       	sbis	0x16, 5	; 22
 328:	fe cf       	rjmp	.-4      	; 0x326 <main+0xc2>
			count = ICR1 + (65535 * TimerOverflow);	/* Take value of capture register */
 32a:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 32e:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	90 e0       	ldi	r25, 0x00	; 0
			/* 8MHz Timer freq, sound speed =343 m/s, calculation mentioned in doc. */
			distance = (double)count / (58*16);
 336:	0e 94 14 03 	call	0x628	; 0x628 <__floatsisf>
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	48 e6       	ldi	r20, 0x68	; 104
 340:	54 e4       	ldi	r21, 0x44	; 68
 342:	0e 94 a0 02 	call	0x540	; 0x540 <__divsf3>

			dtostrf(distance, 2, 0, string); // Convert distance to string
 346:	8e 01       	movw	r16, r28
 348:	0f 5f       	subi	r16, 0xFF	; 255
 34a:	1f 4f       	sbci	r17, 0xFF	; 255
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	42 e0       	ldi	r20, 0x02	; 2
 350:	0e 94 c9 03 	call	0x792	; 0x792 <dtostrf>
			// This checks if angle needs 1, 2 or 3 digits
			// Since having 3 digits only was giving me 0 degrees when < 100 degrees
			if(angle >= 100)					 // If 3 digits
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	48 ec       	ldi	r20, 0xC8	; 200
 35a:	52 e4       	ldi	r21, 0x42	; 66
 35c:	c7 01       	movw	r24, r14
 35e:	b6 01       	movw	r22, r12
 360:	0e 94 c4 03 	call	0x788	; 0x788 <__gesf2>
 364:	88 23       	and	r24, r24
 366:	4c f0       	brlt	.+18     	; 0x37a <main+0x116>
				dtostrf(angle, 3, 0, string2);	 // Convert angle to string
 368:	06 5f       	subi	r16, 0xF6	; 246
 36a:	1f 4f       	sbci	r17, 0xFF	; 255
 36c:	20 e0       	ldi	r18, 0x00	; 0
 36e:	43 e0       	ldi	r20, 0x03	; 3
 370:	c7 01       	movw	r24, r14
 372:	b6 01       	movw	r22, r12
 374:	0e 94 c9 03 	call	0x792	; 0x792 <dtostrf>
 378:	31 c0       	rjmp	.+98     	; 0x3dc <main+0x178>
			else if(angle < 100 && angle >= 10)  // If 2 digits
 37a:	20 e0       	ldi	r18, 0x00	; 0
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	48 ec       	ldi	r20, 0xC8	; 200
 380:	52 e4       	ldi	r21, 0x42	; 66
 382:	c7 01       	movw	r24, r14
 384:	b6 01       	movw	r22, r12
 386:	0e 94 9b 02 	call	0x536	; 0x536 <__cmpsf2>
 38a:	88 23       	and	r24, r24
 38c:	a4 f4       	brge	.+40     	; 0x3b6 <main+0x152>
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	40 e2       	ldi	r20, 0x20	; 32
 394:	51 e4       	ldi	r21, 0x41	; 65
 396:	c7 01       	movw	r24, r14
 398:	b6 01       	movw	r22, r12
 39a:	0e 94 c4 03 	call	0x788	; 0x788 <__gesf2>
 39e:	88 23       	and	r24, r24
 3a0:	54 f0       	brlt	.+20     	; 0x3b6 <main+0x152>
				dtostrf(angle, 2, 0, string2);	 // Convert angle to string
 3a2:	8e 01       	movw	r16, r28
 3a4:	05 5f       	subi	r16, 0xF5	; 245
 3a6:	1f 4f       	sbci	r17, 0xFF	; 255
 3a8:	20 e0       	ldi	r18, 0x00	; 0
 3aa:	42 e0       	ldi	r20, 0x02	; 2
 3ac:	c7 01       	movw	r24, r14
 3ae:	b6 01       	movw	r22, r12
 3b0:	0e 94 c9 03 	call	0x792	; 0x792 <dtostrf>
 3b4:	13 c0       	rjmp	.+38     	; 0x3dc <main+0x178>
			else if(angle < 10)					 // If 1 digit
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	40 e2       	ldi	r20, 0x20	; 32
 3bc:	51 e4       	ldi	r21, 0x41	; 65
 3be:	c7 01       	movw	r24, r14
 3c0:	b6 01       	movw	r22, r12
 3c2:	0e 94 9b 02 	call	0x536	; 0x536 <__cmpsf2>
 3c6:	88 23       	and	r24, r24
 3c8:	4c f4       	brge	.+18     	; 0x3dc <main+0x178>
				dtostrf(angle, 1, 0, string2);	 // Convert angle to string
 3ca:	8e 01       	movw	r16, r28
 3cc:	05 5f       	subi	r16, 0xF5	; 245
 3ce:	1f 4f       	sbci	r17, 0xFF	; 255
 3d0:	20 e0       	ldi	r18, 0x00	; 0
 3d2:	41 e0       	ldi	r20, 0x01	; 1
 3d4:	c7 01       	movw	r24, r14
 3d6:	b6 01       	movw	r22, r12
 3d8:	0e 94 c9 03 	call	0x792	; 0x792 <dtostrf>
			strcpy(result, string2);	// Add angle to result
 3dc:	8e 01       	movw	r16, r28
 3de:	0b 5e       	subi	r16, 0xEB	; 235
 3e0:	1f 4f       	sbci	r17, 0xFF	; 255
 3e2:	be 01       	movw	r22, r28
 3e4:	65 5f       	subi	r22, 0xF5	; 245
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	c8 01       	movw	r24, r16
 3ea:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <strcpy>
			strcat(result, ",");		// Add a comma
 3ee:	f8 01       	movw	r30, r16
 3f0:	01 90       	ld	r0, Z+
 3f2:	00 20       	and	r0, r0
 3f4:	e9 f7       	brne	.-6      	; 0x3f0 <main+0x18c>
 3f6:	31 97       	sbiw	r30, 0x01	; 1
 3f8:	8c e2       	ldi	r24, 0x2C	; 44
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	91 83       	std	Z+1, r25	; 0x01
 3fe:	80 83       	st	Z, r24
			strcat(result, string);		// Add distance to result
 400:	be 01       	movw	r22, r28
 402:	6f 5f       	subi	r22, 0xFF	; 255
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	c8 01       	movw	r24, r16
 408:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <strcat>
			strcat(result, ".");		// Add a period
 40c:	f8 01       	movw	r30, r16
 40e:	01 90       	ld	r0, Z+
 410:	00 20       	and	r0, r0
 412:	e9 f7       	brne	.-6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 414:	31 97       	sbiw	r30, 0x01	; 1
 416:	8e e2       	ldi	r24, 0x2E	; 46
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	91 83       	std	Z+1, r25	; 0x01
 41c:	80 83       	st	Z, r24
			USART_putstring(result);	// Send result through USART
 41e:	c8 01       	movw	r24, r16
 420:	0e 94 fe 00 	call	0x1fc	; 0x1fc <USART_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 424:	8f ef       	ldi	r24, 0xFF	; 255
 426:	93 ec       	ldi	r25, 0xC3	; 195
 428:	29 e0       	ldi	r18, 0x09	; 9
 42a:	81 50       	subi	r24, 0x01	; 1
 42c:	90 40       	sbci	r25, 0x00	; 0
 42e:	20 40       	sbci	r18, 0x00	; 0
 430:	e1 f7       	brne	.-8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 434:	00 00       	nop
			_delay_ms(200);				// 200ms delay
			angle += 2.06896551724;		// Increment angle each loop
 436:	2e ee       	ldi	r18, 0xEE	; 238
 438:	39 e6       	ldi	r19, 0x69	; 105
 43a:	44 e0       	ldi	r20, 0x04	; 4
 43c:	50 e4       	ldi	r21, 0x40	; 64
 43e:	c7 01       	movw	r24, r14
 440:	b6 01       	movw	r22, r12
 442:	0e 94 2f 02 	call	0x45e	; 0x45e <__addsf3>
 446:	6b 01       	movw	r12, r22
 448:	7c 01       	movw	r14, r24
		// FUNCTIONAL SERVO CODE
		OCR3A=97;   //0 degrees
		Wait();
		angle = 0; // Reset angle each time
		// Keep looping until 180 degrees
		for(int i = 0; i < 88; i++) {
 44a:	8f ef       	ldi	r24, 0xFF	; 255
 44c:	a8 1a       	sub	r10, r24
 44e:	b8 0a       	sbc	r11, r24
 450:	98 e5       	ldi	r25, 0x58	; 88
 452:	a9 16       	cp	r10, r25
 454:	b1 04       	cpc	r11, r1
 456:	0c f4       	brge	.+2      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 458:	3a cf       	rjmp	.-396    	; 0x2ce <main+0x6a>
 45a:	2b cf       	rjmp	.-426    	; 0x2b2 <main+0x4e>

0000045c <__subsf3>:
 45c:	50 58       	subi	r21, 0x80	; 128

0000045e <__addsf3>:
 45e:	bb 27       	eor	r27, r27
 460:	aa 27       	eor	r26, r26
 462:	0e 94 46 02 	call	0x48c	; 0x48c <__addsf3x>
 466:	0c 94 8a 03 	jmp	0x714	; 0x714 <__fp_round>
 46a:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__fp_pscA>
 46e:	38 f0       	brcs	.+14     	; 0x47e <__addsf3+0x20>
 470:	0e 94 83 03 	call	0x706	; 0x706 <__fp_pscB>
 474:	20 f0       	brcs	.+8      	; 0x47e <__addsf3+0x20>
 476:	39 f4       	brne	.+14     	; 0x486 <__addsf3+0x28>
 478:	9f 3f       	cpi	r25, 0xFF	; 255
 47a:	19 f4       	brne	.+6      	; 0x482 <__addsf3+0x24>
 47c:	26 f4       	brtc	.+8      	; 0x486 <__addsf3+0x28>
 47e:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_nan>
 482:	0e f4       	brtc	.+2      	; 0x486 <__addsf3+0x28>
 484:	e0 95       	com	r30
 486:	e7 fb       	bst	r30, 7
 488:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_inf>

0000048c <__addsf3x>:
 48c:	e9 2f       	mov	r30, r25
 48e:	0e 94 9b 03 	call	0x736	; 0x736 <__fp_split3>
 492:	58 f3       	brcs	.-42     	; 0x46a <__addsf3+0xc>
 494:	ba 17       	cp	r27, r26
 496:	62 07       	cpc	r22, r18
 498:	73 07       	cpc	r23, r19
 49a:	84 07       	cpc	r24, r20
 49c:	95 07       	cpc	r25, r21
 49e:	20 f0       	brcs	.+8      	; 0x4a8 <__addsf3x+0x1c>
 4a0:	79 f4       	brne	.+30     	; 0x4c0 <__addsf3x+0x34>
 4a2:	a6 f5       	brtc	.+104    	; 0x50c <__addsf3x+0x80>
 4a4:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_zero>
 4a8:	0e f4       	brtc	.+2      	; 0x4ac <__addsf3x+0x20>
 4aa:	e0 95       	com	r30
 4ac:	0b 2e       	mov	r0, r27
 4ae:	ba 2f       	mov	r27, r26
 4b0:	a0 2d       	mov	r26, r0
 4b2:	0b 01       	movw	r0, r22
 4b4:	b9 01       	movw	r22, r18
 4b6:	90 01       	movw	r18, r0
 4b8:	0c 01       	movw	r0, r24
 4ba:	ca 01       	movw	r24, r20
 4bc:	a0 01       	movw	r20, r0
 4be:	11 24       	eor	r1, r1
 4c0:	ff 27       	eor	r31, r31
 4c2:	59 1b       	sub	r21, r25
 4c4:	99 f0       	breq	.+38     	; 0x4ec <__addsf3x+0x60>
 4c6:	59 3f       	cpi	r21, 0xF9	; 249
 4c8:	50 f4       	brcc	.+20     	; 0x4de <__addsf3x+0x52>
 4ca:	50 3e       	cpi	r21, 0xE0	; 224
 4cc:	68 f1       	brcs	.+90     	; 0x528 <__addsf3x+0x9c>
 4ce:	1a 16       	cp	r1, r26
 4d0:	f0 40       	sbci	r31, 0x00	; 0
 4d2:	a2 2f       	mov	r26, r18
 4d4:	23 2f       	mov	r18, r19
 4d6:	34 2f       	mov	r19, r20
 4d8:	44 27       	eor	r20, r20
 4da:	58 5f       	subi	r21, 0xF8	; 248
 4dc:	f3 cf       	rjmp	.-26     	; 0x4c4 <__addsf3x+0x38>
 4de:	46 95       	lsr	r20
 4e0:	37 95       	ror	r19
 4e2:	27 95       	ror	r18
 4e4:	a7 95       	ror	r26
 4e6:	f0 40       	sbci	r31, 0x00	; 0
 4e8:	53 95       	inc	r21
 4ea:	c9 f7       	brne	.-14     	; 0x4de <__addsf3x+0x52>
 4ec:	7e f4       	brtc	.+30     	; 0x50c <__addsf3x+0x80>
 4ee:	1f 16       	cp	r1, r31
 4f0:	ba 0b       	sbc	r27, r26
 4f2:	62 0b       	sbc	r22, r18
 4f4:	73 0b       	sbc	r23, r19
 4f6:	84 0b       	sbc	r24, r20
 4f8:	ba f0       	brmi	.+46     	; 0x528 <__addsf3x+0x9c>
 4fa:	91 50       	subi	r25, 0x01	; 1
 4fc:	a1 f0       	breq	.+40     	; 0x526 <__addsf3x+0x9a>
 4fe:	ff 0f       	add	r31, r31
 500:	bb 1f       	adc	r27, r27
 502:	66 1f       	adc	r22, r22
 504:	77 1f       	adc	r23, r23
 506:	88 1f       	adc	r24, r24
 508:	c2 f7       	brpl	.-16     	; 0x4fa <__addsf3x+0x6e>
 50a:	0e c0       	rjmp	.+28     	; 0x528 <__addsf3x+0x9c>
 50c:	ba 0f       	add	r27, r26
 50e:	62 1f       	adc	r22, r18
 510:	73 1f       	adc	r23, r19
 512:	84 1f       	adc	r24, r20
 514:	48 f4       	brcc	.+18     	; 0x528 <__addsf3x+0x9c>
 516:	87 95       	ror	r24
 518:	77 95       	ror	r23
 51a:	67 95       	ror	r22
 51c:	b7 95       	ror	r27
 51e:	f7 95       	ror	r31
 520:	9e 3f       	cpi	r25, 0xFE	; 254
 522:	08 f0       	brcs	.+2      	; 0x526 <__addsf3x+0x9a>
 524:	b0 cf       	rjmp	.-160    	; 0x486 <__addsf3+0x28>
 526:	93 95       	inc	r25
 528:	88 0f       	add	r24, r24
 52a:	08 f0       	brcs	.+2      	; 0x52e <__addsf3x+0xa2>
 52c:	99 27       	eor	r25, r25
 52e:	ee 0f       	add	r30, r30
 530:	97 95       	ror	r25
 532:	87 95       	ror	r24
 534:	08 95       	ret

00000536 <__cmpsf2>:
 536:	0e 94 4f 03 	call	0x69e	; 0x69e <__fp_cmp>
 53a:	08 f4       	brcc	.+2      	; 0x53e <__cmpsf2+0x8>
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	08 95       	ret

00000540 <__divsf3>:
 540:	0e 94 b4 02 	call	0x568	; 0x568 <__divsf3x>
 544:	0c 94 8a 03 	jmp	0x714	; 0x714 <__fp_round>
 548:	0e 94 83 03 	call	0x706	; 0x706 <__fp_pscB>
 54c:	58 f0       	brcs	.+22     	; 0x564 <__divsf3+0x24>
 54e:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__fp_pscA>
 552:	40 f0       	brcs	.+16     	; 0x564 <__divsf3+0x24>
 554:	29 f4       	brne	.+10     	; 0x560 <__divsf3+0x20>
 556:	5f 3f       	cpi	r21, 0xFF	; 255
 558:	29 f0       	breq	.+10     	; 0x564 <__divsf3+0x24>
 55a:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_inf>
 55e:	51 11       	cpse	r21, r1
 560:	0c 94 be 03 	jmp	0x77c	; 0x77c <__fp_szero>
 564:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_nan>

00000568 <__divsf3x>:
 568:	0e 94 9b 03 	call	0x736	; 0x736 <__fp_split3>
 56c:	68 f3       	brcs	.-38     	; 0x548 <__divsf3+0x8>

0000056e <__divsf3_pse>:
 56e:	99 23       	and	r25, r25
 570:	b1 f3       	breq	.-20     	; 0x55e <__divsf3+0x1e>
 572:	55 23       	and	r21, r21
 574:	91 f3       	breq	.-28     	; 0x55a <__divsf3+0x1a>
 576:	95 1b       	sub	r25, r21
 578:	55 0b       	sbc	r21, r21
 57a:	bb 27       	eor	r27, r27
 57c:	aa 27       	eor	r26, r26
 57e:	62 17       	cp	r22, r18
 580:	73 07       	cpc	r23, r19
 582:	84 07       	cpc	r24, r20
 584:	38 f0       	brcs	.+14     	; 0x594 <__divsf3_pse+0x26>
 586:	9f 5f       	subi	r25, 0xFF	; 255
 588:	5f 4f       	sbci	r21, 0xFF	; 255
 58a:	22 0f       	add	r18, r18
 58c:	33 1f       	adc	r19, r19
 58e:	44 1f       	adc	r20, r20
 590:	aa 1f       	adc	r26, r26
 592:	a9 f3       	breq	.-22     	; 0x57e <__divsf3_pse+0x10>
 594:	35 d0       	rcall	.+106    	; 0x600 <__divsf3_pse+0x92>
 596:	0e 2e       	mov	r0, r30
 598:	3a f0       	brmi	.+14     	; 0x5a8 <__divsf3_pse+0x3a>
 59a:	e0 e8       	ldi	r30, 0x80	; 128
 59c:	32 d0       	rcall	.+100    	; 0x602 <__divsf3_pse+0x94>
 59e:	91 50       	subi	r25, 0x01	; 1
 5a0:	50 40       	sbci	r21, 0x00	; 0
 5a2:	e6 95       	lsr	r30
 5a4:	00 1c       	adc	r0, r0
 5a6:	ca f7       	brpl	.-14     	; 0x59a <__divsf3_pse+0x2c>
 5a8:	2b d0       	rcall	.+86     	; 0x600 <__divsf3_pse+0x92>
 5aa:	fe 2f       	mov	r31, r30
 5ac:	29 d0       	rcall	.+82     	; 0x600 <__divsf3_pse+0x92>
 5ae:	66 0f       	add	r22, r22
 5b0:	77 1f       	adc	r23, r23
 5b2:	88 1f       	adc	r24, r24
 5b4:	bb 1f       	adc	r27, r27
 5b6:	26 17       	cp	r18, r22
 5b8:	37 07       	cpc	r19, r23
 5ba:	48 07       	cpc	r20, r24
 5bc:	ab 07       	cpc	r26, r27
 5be:	b0 e8       	ldi	r27, 0x80	; 128
 5c0:	09 f0       	breq	.+2      	; 0x5c4 <__divsf3_pse+0x56>
 5c2:	bb 0b       	sbc	r27, r27
 5c4:	80 2d       	mov	r24, r0
 5c6:	bf 01       	movw	r22, r30
 5c8:	ff 27       	eor	r31, r31
 5ca:	93 58       	subi	r25, 0x83	; 131
 5cc:	5f 4f       	sbci	r21, 0xFF	; 255
 5ce:	3a f0       	brmi	.+14     	; 0x5de <__divsf3_pse+0x70>
 5d0:	9e 3f       	cpi	r25, 0xFE	; 254
 5d2:	51 05       	cpc	r21, r1
 5d4:	78 f0       	brcs	.+30     	; 0x5f4 <__divsf3_pse+0x86>
 5d6:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_inf>
 5da:	0c 94 be 03 	jmp	0x77c	; 0x77c <__fp_szero>
 5de:	5f 3f       	cpi	r21, 0xFF	; 255
 5e0:	e4 f3       	brlt	.-8      	; 0x5da <__divsf3_pse+0x6c>
 5e2:	98 3e       	cpi	r25, 0xE8	; 232
 5e4:	d4 f3       	brlt	.-12     	; 0x5da <__divsf3_pse+0x6c>
 5e6:	86 95       	lsr	r24
 5e8:	77 95       	ror	r23
 5ea:	67 95       	ror	r22
 5ec:	b7 95       	ror	r27
 5ee:	f7 95       	ror	r31
 5f0:	9f 5f       	subi	r25, 0xFF	; 255
 5f2:	c9 f7       	brne	.-14     	; 0x5e6 <__divsf3_pse+0x78>
 5f4:	88 0f       	add	r24, r24
 5f6:	91 1d       	adc	r25, r1
 5f8:	96 95       	lsr	r25
 5fa:	87 95       	ror	r24
 5fc:	97 f9       	bld	r25, 7
 5fe:	08 95       	ret
 600:	e1 e0       	ldi	r30, 0x01	; 1
 602:	66 0f       	add	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	88 1f       	adc	r24, r24
 608:	bb 1f       	adc	r27, r27
 60a:	62 17       	cp	r22, r18
 60c:	73 07       	cpc	r23, r19
 60e:	84 07       	cpc	r24, r20
 610:	ba 07       	cpc	r27, r26
 612:	20 f0       	brcs	.+8      	; 0x61c <__divsf3_pse+0xae>
 614:	62 1b       	sub	r22, r18
 616:	73 0b       	sbc	r23, r19
 618:	84 0b       	sbc	r24, r20
 61a:	ba 0b       	sbc	r27, r26
 61c:	ee 1f       	adc	r30, r30
 61e:	88 f7       	brcc	.-30     	; 0x602 <__divsf3_pse+0x94>
 620:	e0 95       	com	r30
 622:	08 95       	ret

00000624 <__floatunsisf>:
 624:	e8 94       	clt
 626:	09 c0       	rjmp	.+18     	; 0x63a <__floatsisf+0x12>

00000628 <__floatsisf>:
 628:	97 fb       	bst	r25, 7
 62a:	3e f4       	brtc	.+14     	; 0x63a <__floatsisf+0x12>
 62c:	90 95       	com	r25
 62e:	80 95       	com	r24
 630:	70 95       	com	r23
 632:	61 95       	neg	r22
 634:	7f 4f       	sbci	r23, 0xFF	; 255
 636:	8f 4f       	sbci	r24, 0xFF	; 255
 638:	9f 4f       	sbci	r25, 0xFF	; 255
 63a:	99 23       	and	r25, r25
 63c:	a9 f0       	breq	.+42     	; 0x668 <__floatsisf+0x40>
 63e:	f9 2f       	mov	r31, r25
 640:	96 e9       	ldi	r25, 0x96	; 150
 642:	bb 27       	eor	r27, r27
 644:	93 95       	inc	r25
 646:	f6 95       	lsr	r31
 648:	87 95       	ror	r24
 64a:	77 95       	ror	r23
 64c:	67 95       	ror	r22
 64e:	b7 95       	ror	r27
 650:	f1 11       	cpse	r31, r1
 652:	f8 cf       	rjmp	.-16     	; 0x644 <__floatsisf+0x1c>
 654:	fa f4       	brpl	.+62     	; 0x694 <__floatsisf+0x6c>
 656:	bb 0f       	add	r27, r27
 658:	11 f4       	brne	.+4      	; 0x65e <__floatsisf+0x36>
 65a:	60 ff       	sbrs	r22, 0
 65c:	1b c0       	rjmp	.+54     	; 0x694 <__floatsisf+0x6c>
 65e:	6f 5f       	subi	r22, 0xFF	; 255
 660:	7f 4f       	sbci	r23, 0xFF	; 255
 662:	8f 4f       	sbci	r24, 0xFF	; 255
 664:	9f 4f       	sbci	r25, 0xFF	; 255
 666:	16 c0       	rjmp	.+44     	; 0x694 <__floatsisf+0x6c>
 668:	88 23       	and	r24, r24
 66a:	11 f0       	breq	.+4      	; 0x670 <__floatsisf+0x48>
 66c:	96 e9       	ldi	r25, 0x96	; 150
 66e:	11 c0       	rjmp	.+34     	; 0x692 <__floatsisf+0x6a>
 670:	77 23       	and	r23, r23
 672:	21 f0       	breq	.+8      	; 0x67c <__floatsisf+0x54>
 674:	9e e8       	ldi	r25, 0x8E	; 142
 676:	87 2f       	mov	r24, r23
 678:	76 2f       	mov	r23, r22
 67a:	05 c0       	rjmp	.+10     	; 0x686 <__floatsisf+0x5e>
 67c:	66 23       	and	r22, r22
 67e:	71 f0       	breq	.+28     	; 0x69c <__floatsisf+0x74>
 680:	96 e8       	ldi	r25, 0x86	; 134
 682:	86 2f       	mov	r24, r22
 684:	70 e0       	ldi	r23, 0x00	; 0
 686:	60 e0       	ldi	r22, 0x00	; 0
 688:	2a f0       	brmi	.+10     	; 0x694 <__floatsisf+0x6c>
 68a:	9a 95       	dec	r25
 68c:	66 0f       	add	r22, r22
 68e:	77 1f       	adc	r23, r23
 690:	88 1f       	adc	r24, r24
 692:	da f7       	brpl	.-10     	; 0x68a <__floatsisf+0x62>
 694:	88 0f       	add	r24, r24
 696:	96 95       	lsr	r25
 698:	87 95       	ror	r24
 69a:	97 f9       	bld	r25, 7
 69c:	08 95       	ret

0000069e <__fp_cmp>:
 69e:	99 0f       	add	r25, r25
 6a0:	00 08       	sbc	r0, r0
 6a2:	55 0f       	add	r21, r21
 6a4:	aa 0b       	sbc	r26, r26
 6a6:	e0 e8       	ldi	r30, 0x80	; 128
 6a8:	fe ef       	ldi	r31, 0xFE	; 254
 6aa:	16 16       	cp	r1, r22
 6ac:	17 06       	cpc	r1, r23
 6ae:	e8 07       	cpc	r30, r24
 6b0:	f9 07       	cpc	r31, r25
 6b2:	c0 f0       	brcs	.+48     	; 0x6e4 <__fp_cmp+0x46>
 6b4:	12 16       	cp	r1, r18
 6b6:	13 06       	cpc	r1, r19
 6b8:	e4 07       	cpc	r30, r20
 6ba:	f5 07       	cpc	r31, r21
 6bc:	98 f0       	brcs	.+38     	; 0x6e4 <__fp_cmp+0x46>
 6be:	62 1b       	sub	r22, r18
 6c0:	73 0b       	sbc	r23, r19
 6c2:	84 0b       	sbc	r24, r20
 6c4:	95 0b       	sbc	r25, r21
 6c6:	39 f4       	brne	.+14     	; 0x6d6 <__fp_cmp+0x38>
 6c8:	0a 26       	eor	r0, r26
 6ca:	61 f0       	breq	.+24     	; 0x6e4 <__fp_cmp+0x46>
 6cc:	23 2b       	or	r18, r19
 6ce:	24 2b       	or	r18, r20
 6d0:	25 2b       	or	r18, r21
 6d2:	21 f4       	brne	.+8      	; 0x6dc <__fp_cmp+0x3e>
 6d4:	08 95       	ret
 6d6:	0a 26       	eor	r0, r26
 6d8:	09 f4       	brne	.+2      	; 0x6dc <__fp_cmp+0x3e>
 6da:	a1 40       	sbci	r26, 0x01	; 1
 6dc:	a6 95       	lsr	r26
 6de:	8f ef       	ldi	r24, 0xFF	; 255
 6e0:	81 1d       	adc	r24, r1
 6e2:	81 1d       	adc	r24, r1
 6e4:	08 95       	ret

000006e6 <__fp_inf>:
 6e6:	97 f9       	bld	r25, 7
 6e8:	9f 67       	ori	r25, 0x7F	; 127
 6ea:	80 e8       	ldi	r24, 0x80	; 128
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	60 e0       	ldi	r22, 0x00	; 0
 6f0:	08 95       	ret

000006f2 <__fp_nan>:
 6f2:	9f ef       	ldi	r25, 0xFF	; 255
 6f4:	80 ec       	ldi	r24, 0xC0	; 192
 6f6:	08 95       	ret

000006f8 <__fp_pscA>:
 6f8:	00 24       	eor	r0, r0
 6fa:	0a 94       	dec	r0
 6fc:	16 16       	cp	r1, r22
 6fe:	17 06       	cpc	r1, r23
 700:	18 06       	cpc	r1, r24
 702:	09 06       	cpc	r0, r25
 704:	08 95       	ret

00000706 <__fp_pscB>:
 706:	00 24       	eor	r0, r0
 708:	0a 94       	dec	r0
 70a:	12 16       	cp	r1, r18
 70c:	13 06       	cpc	r1, r19
 70e:	14 06       	cpc	r1, r20
 710:	05 06       	cpc	r0, r21
 712:	08 95       	ret

00000714 <__fp_round>:
 714:	09 2e       	mov	r0, r25
 716:	03 94       	inc	r0
 718:	00 0c       	add	r0, r0
 71a:	11 f4       	brne	.+4      	; 0x720 <__fp_round+0xc>
 71c:	88 23       	and	r24, r24
 71e:	52 f0       	brmi	.+20     	; 0x734 <__fp_round+0x20>
 720:	bb 0f       	add	r27, r27
 722:	40 f4       	brcc	.+16     	; 0x734 <__fp_round+0x20>
 724:	bf 2b       	or	r27, r31
 726:	11 f4       	brne	.+4      	; 0x72c <__fp_round+0x18>
 728:	60 ff       	sbrs	r22, 0
 72a:	04 c0       	rjmp	.+8      	; 0x734 <__fp_round+0x20>
 72c:	6f 5f       	subi	r22, 0xFF	; 255
 72e:	7f 4f       	sbci	r23, 0xFF	; 255
 730:	8f 4f       	sbci	r24, 0xFF	; 255
 732:	9f 4f       	sbci	r25, 0xFF	; 255
 734:	08 95       	ret

00000736 <__fp_split3>:
 736:	57 fd       	sbrc	r21, 7
 738:	90 58       	subi	r25, 0x80	; 128
 73a:	44 0f       	add	r20, r20
 73c:	55 1f       	adc	r21, r21
 73e:	59 f0       	breq	.+22     	; 0x756 <__fp_splitA+0x10>
 740:	5f 3f       	cpi	r21, 0xFF	; 255
 742:	71 f0       	breq	.+28     	; 0x760 <__fp_splitA+0x1a>
 744:	47 95       	ror	r20

00000746 <__fp_splitA>:
 746:	88 0f       	add	r24, r24
 748:	97 fb       	bst	r25, 7
 74a:	99 1f       	adc	r25, r25
 74c:	61 f0       	breq	.+24     	; 0x766 <__fp_splitA+0x20>
 74e:	9f 3f       	cpi	r25, 0xFF	; 255
 750:	79 f0       	breq	.+30     	; 0x770 <__fp_splitA+0x2a>
 752:	87 95       	ror	r24
 754:	08 95       	ret
 756:	12 16       	cp	r1, r18
 758:	13 06       	cpc	r1, r19
 75a:	14 06       	cpc	r1, r20
 75c:	55 1f       	adc	r21, r21
 75e:	f2 cf       	rjmp	.-28     	; 0x744 <__fp_split3+0xe>
 760:	46 95       	lsr	r20
 762:	f1 df       	rcall	.-30     	; 0x746 <__fp_splitA>
 764:	08 c0       	rjmp	.+16     	; 0x776 <__fp_splitA+0x30>
 766:	16 16       	cp	r1, r22
 768:	17 06       	cpc	r1, r23
 76a:	18 06       	cpc	r1, r24
 76c:	99 1f       	adc	r25, r25
 76e:	f1 cf       	rjmp	.-30     	; 0x752 <__fp_splitA+0xc>
 770:	86 95       	lsr	r24
 772:	71 05       	cpc	r23, r1
 774:	61 05       	cpc	r22, r1
 776:	08 94       	sec
 778:	08 95       	ret

0000077a <__fp_zero>:
 77a:	e8 94       	clt

0000077c <__fp_szero>:
 77c:	bb 27       	eor	r27, r27
 77e:	66 27       	eor	r22, r22
 780:	77 27       	eor	r23, r23
 782:	cb 01       	movw	r24, r22
 784:	97 f9       	bld	r25, 7
 786:	08 95       	ret

00000788 <__gesf2>:
 788:	0e 94 4f 03 	call	0x69e	; 0x69e <__fp_cmp>
 78c:	08 f4       	brcc	.+2      	; 0x790 <__gesf2+0x8>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	08 95       	ret

00000792 <dtostrf>:
 792:	ef 92       	push	r14
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	e8 01       	movw	r28, r16
 79e:	47 fd       	sbrc	r20, 7
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <dtostrf+0x14>
 7a2:	34 e0       	ldi	r19, 0x04	; 4
 7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <dtostrf+0x16>
 7a6:	34 e1       	ldi	r19, 0x14	; 20
 7a8:	04 2e       	mov	r0, r20
 7aa:	00 0c       	add	r0, r0
 7ac:	55 0b       	sbc	r21, r21
 7ae:	57 ff       	sbrs	r21, 7
 7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <dtostrf+0x26>
 7b2:	51 95       	neg	r21
 7b4:	41 95       	neg	r20
 7b6:	51 09       	sbc	r21, r1
 7b8:	e3 2e       	mov	r14, r19
 7ba:	02 2f       	mov	r16, r18
 7bc:	24 2f       	mov	r18, r20
 7be:	ae 01       	movw	r20, r28
 7c0:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <dtoa_prf>
 7c4:	ce 01       	movw	r24, r28
 7c6:	df 91       	pop	r29
 7c8:	cf 91       	pop	r28
 7ca:	1f 91       	pop	r17
 7cc:	0f 91       	pop	r16
 7ce:	ef 90       	pop	r14
 7d0:	08 95       	ret

000007d2 <strcat>:
 7d2:	fb 01       	movw	r30, r22
 7d4:	dc 01       	movw	r26, r24
 7d6:	0d 90       	ld	r0, X+
 7d8:	00 20       	and	r0, r0
 7da:	e9 f7       	brne	.-6      	; 0x7d6 <strcat+0x4>
 7dc:	11 97       	sbiw	r26, 0x01	; 1
 7de:	01 90       	ld	r0, Z+
 7e0:	0d 92       	st	X+, r0
 7e2:	00 20       	and	r0, r0
 7e4:	e1 f7       	brne	.-8      	; 0x7de <strcat+0xc>
 7e6:	08 95       	ret

000007e8 <strcpy>:
 7e8:	fb 01       	movw	r30, r22
 7ea:	dc 01       	movw	r26, r24
 7ec:	01 90       	ld	r0, Z+
 7ee:	0d 92       	st	X+, r0
 7f0:	00 20       	and	r0, r0
 7f2:	e1 f7       	brne	.-8      	; 0x7ec <strcpy+0x4>
 7f4:	08 95       	ret

000007f6 <dtoa_prf>:
 7f6:	a9 e0       	ldi	r26, 0x09	; 9
 7f8:	b0 e0       	ldi	r27, 0x00	; 0
 7fa:	e1 e0       	ldi	r30, 0x01	; 1
 7fc:	f4 e0       	ldi	r31, 0x04	; 4
 7fe:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__prologue_saves__+0xc>
 802:	6a 01       	movw	r12, r20
 804:	12 2f       	mov	r17, r18
 806:	b0 2e       	mov	r11, r16
 808:	2b e3       	ldi	r18, 0x3B	; 59
 80a:	20 17       	cp	r18, r16
 80c:	20 f0       	brcs	.+8      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 80e:	ff 24       	eor	r15, r15
 810:	f3 94       	inc	r15
 812:	f0 0e       	add	r15, r16
 814:	02 c0       	rjmp	.+4      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 816:	2c e3       	ldi	r18, 0x3C	; 60
 818:	f2 2e       	mov	r15, r18
 81a:	0f 2d       	mov	r16, r15
 81c:	27 e0       	ldi	r18, 0x07	; 7
 81e:	ae 01       	movw	r20, r28
 820:	4f 5f       	subi	r20, 0xFF	; 255
 822:	5f 4f       	sbci	r21, 0xFF	; 255
 824:	0e 94 55 05 	call	0xaaa	; 0xaaa <__ftoa_engine>
 828:	bc 01       	movw	r22, r24
 82a:	49 81       	ldd	r20, Y+1	; 0x01
 82c:	84 2f       	mov	r24, r20
 82e:	89 70       	andi	r24, 0x09	; 9
 830:	81 30       	cpi	r24, 0x01	; 1
 832:	31 f0       	breq	.+12     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 834:	e1 fc       	sbrc	r14, 1
 836:	06 c0       	rjmp	.+12     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 838:	e0 fe       	sbrs	r14, 0
 83a:	06 c0       	rjmp	.+12     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 83c:	90 e2       	ldi	r25, 0x20	; 32
 83e:	05 c0       	rjmp	.+10     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 840:	9d e2       	ldi	r25, 0x2D	; 45
 842:	03 c0       	rjmp	.+6      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 844:	9b e2       	ldi	r25, 0x2B	; 43
 846:	01 c0       	rjmp	.+2      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	5e 2d       	mov	r21, r14
 84c:	50 71       	andi	r21, 0x10	; 16
 84e:	43 ff       	sbrs	r20, 3
 850:	3c c0       	rjmp	.+120    	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 852:	91 11       	cpse	r25, r1
 854:	02 c0       	rjmp	.+4      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 856:	83 e0       	ldi	r24, 0x03	; 3
 858:	01 c0       	rjmp	.+2      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 85a:	84 e0       	ldi	r24, 0x04	; 4
 85c:	81 17       	cp	r24, r17
 85e:	18 f4       	brcc	.+6      	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 860:	21 2f       	mov	r18, r17
 862:	28 1b       	sub	r18, r24
 864:	01 c0       	rjmp	.+2      	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 866:	20 e0       	ldi	r18, 0x00	; 0
 868:	51 11       	cpse	r21, r1
 86a:	0b c0       	rjmp	.+22     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 86c:	f6 01       	movw	r30, r12
 86e:	82 2f       	mov	r24, r18
 870:	30 e2       	ldi	r19, 0x20	; 32
 872:	88 23       	and	r24, r24
 874:	19 f0       	breq	.+6      	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 876:	31 93       	st	Z+, r19
 878:	81 50       	subi	r24, 0x01	; 1
 87a:	fb cf       	rjmp	.-10     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 87c:	c2 0e       	add	r12, r18
 87e:	d1 1c       	adc	r13, r1
 880:	20 e0       	ldi	r18, 0x00	; 0
 882:	99 23       	and	r25, r25
 884:	29 f0       	breq	.+10     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 886:	d6 01       	movw	r26, r12
 888:	9c 93       	st	X, r25
 88a:	f6 01       	movw	r30, r12
 88c:	31 96       	adiw	r30, 0x01	; 1
 88e:	6f 01       	movw	r12, r30
 890:	c6 01       	movw	r24, r12
 892:	03 96       	adiw	r24, 0x03	; 3
 894:	e2 fe       	sbrs	r14, 2
 896:	0a c0       	rjmp	.+20     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 898:	3e e4       	ldi	r19, 0x4E	; 78
 89a:	d6 01       	movw	r26, r12
 89c:	3c 93       	st	X, r19
 89e:	41 e4       	ldi	r20, 0x41	; 65
 8a0:	11 96       	adiw	r26, 0x01	; 1
 8a2:	4c 93       	st	X, r20
 8a4:	11 97       	sbiw	r26, 0x01	; 1
 8a6:	12 96       	adiw	r26, 0x02	; 2
 8a8:	3c 93       	st	X, r19
 8aa:	06 c0       	rjmp	.+12     	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8ac:	3e e6       	ldi	r19, 0x6E	; 110
 8ae:	f6 01       	movw	r30, r12
 8b0:	30 83       	st	Z, r19
 8b2:	41 e6       	ldi	r20, 0x61	; 97
 8b4:	41 83       	std	Z+1, r20	; 0x01
 8b6:	32 83       	std	Z+2, r19	; 0x02
 8b8:	fc 01       	movw	r30, r24
 8ba:	32 2f       	mov	r19, r18
 8bc:	40 e2       	ldi	r20, 0x20	; 32
 8be:	33 23       	and	r19, r19
 8c0:	09 f4       	brne	.+2      	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8c2:	42 c0       	rjmp	.+132    	; 0x948 <__stack+0x49>
 8c4:	41 93       	st	Z+, r20
 8c6:	31 50       	subi	r19, 0x01	; 1
 8c8:	fa cf       	rjmp	.-12     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8ca:	42 ff       	sbrs	r20, 2
 8cc:	44 c0       	rjmp	.+136    	; 0x956 <__stack+0x57>
 8ce:	91 11       	cpse	r25, r1
 8d0:	02 c0       	rjmp	.+4      	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
 8d2:	83 e0       	ldi	r24, 0x03	; 3
 8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
 8d6:	84 e0       	ldi	r24, 0x04	; 4
 8d8:	81 17       	cp	r24, r17
 8da:	18 f4       	brcc	.+6      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8dc:	21 2f       	mov	r18, r17
 8de:	28 1b       	sub	r18, r24
 8e0:	01 c0       	rjmp	.+2      	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8e2:	20 e0       	ldi	r18, 0x00	; 0
 8e4:	51 11       	cpse	r21, r1
 8e6:	0b c0       	rjmp	.+22     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8e8:	f6 01       	movw	r30, r12
 8ea:	82 2f       	mov	r24, r18
 8ec:	30 e2       	ldi	r19, 0x20	; 32
 8ee:	88 23       	and	r24, r24
 8f0:	19 f0       	breq	.+6      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8f2:	31 93       	st	Z+, r19
 8f4:	81 50       	subi	r24, 0x01	; 1
 8f6:	fb cf       	rjmp	.-10     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8f8:	c2 0e       	add	r12, r18
 8fa:	d1 1c       	adc	r13, r1
 8fc:	20 e0       	ldi	r18, 0x00	; 0
 8fe:	99 23       	and	r25, r25
 900:	29 f0       	breq	.+10     	; 0x90c <__stack+0xd>
 902:	d6 01       	movw	r26, r12
 904:	9c 93       	st	X, r25
 906:	f6 01       	movw	r30, r12
 908:	31 96       	adiw	r30, 0x01	; 1
 90a:	6f 01       	movw	r12, r30
 90c:	c6 01       	movw	r24, r12
 90e:	03 96       	adiw	r24, 0x03	; 3
 910:	e2 fe       	sbrs	r14, 2
 912:	0b c0       	rjmp	.+22     	; 0x92a <__stack+0x2b>
 914:	39 e4       	ldi	r19, 0x49	; 73
 916:	d6 01       	movw	r26, r12
 918:	3c 93       	st	X, r19
 91a:	3e e4       	ldi	r19, 0x4E	; 78
 91c:	11 96       	adiw	r26, 0x01	; 1
 91e:	3c 93       	st	X, r19
 920:	11 97       	sbiw	r26, 0x01	; 1
 922:	36 e4       	ldi	r19, 0x46	; 70
 924:	12 96       	adiw	r26, 0x02	; 2
 926:	3c 93       	st	X, r19
 928:	07 c0       	rjmp	.+14     	; 0x938 <__stack+0x39>
 92a:	39 e6       	ldi	r19, 0x69	; 105
 92c:	f6 01       	movw	r30, r12
 92e:	30 83       	st	Z, r19
 930:	3e e6       	ldi	r19, 0x6E	; 110
 932:	31 83       	std	Z+1, r19	; 0x01
 934:	36 e6       	ldi	r19, 0x66	; 102
 936:	32 83       	std	Z+2, r19	; 0x02
 938:	fc 01       	movw	r30, r24
 93a:	32 2f       	mov	r19, r18
 93c:	40 e2       	ldi	r20, 0x20	; 32
 93e:	33 23       	and	r19, r19
 940:	19 f0       	breq	.+6      	; 0x948 <__stack+0x49>
 942:	41 93       	st	Z+, r20
 944:	31 50       	subi	r19, 0x01	; 1
 946:	fb cf       	rjmp	.-10     	; 0x93e <__stack+0x3f>
 948:	fc 01       	movw	r30, r24
 94a:	e2 0f       	add	r30, r18
 94c:	f1 1d       	adc	r31, r1
 94e:	10 82       	st	Z, r1
 950:	8e ef       	ldi	r24, 0xFE	; 254
 952:	9f ef       	ldi	r25, 0xFF	; 255
 954:	a6 c0       	rjmp	.+332    	; 0xaa2 <__stack+0x1a3>
 956:	21 e0       	ldi	r18, 0x01	; 1
 958:	30 e0       	ldi	r19, 0x00	; 0
 95a:	91 11       	cpse	r25, r1
 95c:	02 c0       	rjmp	.+4      	; 0x962 <__stack+0x63>
 95e:	20 e0       	ldi	r18, 0x00	; 0
 960:	30 e0       	ldi	r19, 0x00	; 0
 962:	16 16       	cp	r1, r22
 964:	17 06       	cpc	r1, r23
 966:	1c f4       	brge	.+6      	; 0x96e <__stack+0x6f>
 968:	fb 01       	movw	r30, r22
 96a:	31 96       	adiw	r30, 0x01	; 1
 96c:	02 c0       	rjmp	.+4      	; 0x972 <__stack+0x73>
 96e:	e1 e0       	ldi	r30, 0x01	; 1
 970:	f0 e0       	ldi	r31, 0x00	; 0
 972:	2e 0f       	add	r18, r30
 974:	3f 1f       	adc	r19, r31
 976:	bb 20       	and	r11, r11
 978:	21 f0       	breq	.+8      	; 0x982 <__stack+0x83>
 97a:	eb 2d       	mov	r30, r11
 97c:	f0 e0       	ldi	r31, 0x00	; 0
 97e:	31 96       	adiw	r30, 0x01	; 1
 980:	02 c0       	rjmp	.+4      	; 0x986 <__stack+0x87>
 982:	e0 e0       	ldi	r30, 0x00	; 0
 984:	f0 e0       	ldi	r31, 0x00	; 0
 986:	2e 0f       	add	r18, r30
 988:	3f 1f       	adc	r19, r31
 98a:	e1 2f       	mov	r30, r17
 98c:	f0 e0       	ldi	r31, 0x00	; 0
 98e:	2e 17       	cp	r18, r30
 990:	3f 07       	cpc	r19, r31
 992:	1c f4       	brge	.+6      	; 0x99a <__stack+0x9b>
 994:	12 1b       	sub	r17, r18
 996:	21 2f       	mov	r18, r17
 998:	01 c0       	rjmp	.+2      	; 0x99c <__stack+0x9d>
 99a:	20 e0       	ldi	r18, 0x00	; 0
 99c:	8e 2d       	mov	r24, r14
 99e:	88 71       	andi	r24, 0x18	; 24
 9a0:	59 f4       	brne	.+22     	; 0x9b8 <__stack+0xb9>
 9a2:	f6 01       	movw	r30, r12
 9a4:	82 2f       	mov	r24, r18
 9a6:	30 e2       	ldi	r19, 0x20	; 32
 9a8:	88 23       	and	r24, r24
 9aa:	19 f0       	breq	.+6      	; 0x9b2 <__stack+0xb3>
 9ac:	31 93       	st	Z+, r19
 9ae:	81 50       	subi	r24, 0x01	; 1
 9b0:	fb cf       	rjmp	.-10     	; 0x9a8 <__stack+0xa9>
 9b2:	c2 0e       	add	r12, r18
 9b4:	d1 1c       	adc	r13, r1
 9b6:	20 e0       	ldi	r18, 0x00	; 0
 9b8:	99 23       	and	r25, r25
 9ba:	29 f0       	breq	.+10     	; 0x9c6 <__stack+0xc7>
 9bc:	d6 01       	movw	r26, r12
 9be:	9c 93       	st	X, r25
 9c0:	f6 01       	movw	r30, r12
 9c2:	31 96       	adiw	r30, 0x01	; 1
 9c4:	6f 01       	movw	r12, r30
 9c6:	51 11       	cpse	r21, r1
 9c8:	0b c0       	rjmp	.+22     	; 0x9e0 <__stack+0xe1>
 9ca:	f6 01       	movw	r30, r12
 9cc:	82 2f       	mov	r24, r18
 9ce:	90 e3       	ldi	r25, 0x30	; 48
 9d0:	88 23       	and	r24, r24
 9d2:	19 f0       	breq	.+6      	; 0x9da <__stack+0xdb>
 9d4:	91 93       	st	Z+, r25
 9d6:	81 50       	subi	r24, 0x01	; 1
 9d8:	fb cf       	rjmp	.-10     	; 0x9d0 <__stack+0xd1>
 9da:	c2 0e       	add	r12, r18
 9dc:	d1 1c       	adc	r13, r1
 9de:	20 e0       	ldi	r18, 0x00	; 0
 9e0:	0f 2d       	mov	r16, r15
 9e2:	06 0f       	add	r16, r22
 9e4:	9a 81       	ldd	r25, Y+2	; 0x02
 9e6:	34 2f       	mov	r19, r20
 9e8:	30 71       	andi	r19, 0x10	; 16
 9ea:	44 ff       	sbrs	r20, 4
 9ec:	03 c0       	rjmp	.+6      	; 0x9f4 <__stack+0xf5>
 9ee:	91 33       	cpi	r25, 0x31	; 49
 9f0:	09 f4       	brne	.+2      	; 0x9f4 <__stack+0xf5>
 9f2:	01 50       	subi	r16, 0x01	; 1
 9f4:	10 16       	cp	r1, r16
 9f6:	24 f4       	brge	.+8      	; 0xa00 <__stack+0x101>
 9f8:	09 30       	cpi	r16, 0x09	; 9
 9fa:	18 f0       	brcs	.+6      	; 0xa02 <__stack+0x103>
 9fc:	08 e0       	ldi	r16, 0x08	; 8
 9fe:	01 c0       	rjmp	.+2      	; 0xa02 <__stack+0x103>
 a00:	01 e0       	ldi	r16, 0x01	; 1
 a02:	ab 01       	movw	r20, r22
 a04:	77 ff       	sbrs	r23, 7
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <__stack+0x10d>
 a08:	40 e0       	ldi	r20, 0x00	; 0
 a0a:	50 e0       	ldi	r21, 0x00	; 0
 a0c:	fb 01       	movw	r30, r22
 a0e:	e4 1b       	sub	r30, r20
 a10:	f5 0b       	sbc	r31, r21
 a12:	a1 e0       	ldi	r26, 0x01	; 1
 a14:	b0 e0       	ldi	r27, 0x00	; 0
 a16:	ac 0f       	add	r26, r28
 a18:	bd 1f       	adc	r27, r29
 a1a:	ea 0f       	add	r30, r26
 a1c:	fb 1f       	adc	r31, r27
 a1e:	8e e2       	ldi	r24, 0x2E	; 46
 a20:	a8 2e       	mov	r10, r24
 a22:	4b 01       	movw	r8, r22
 a24:	80 1a       	sub	r8, r16
 a26:	91 08       	sbc	r9, r1
 a28:	0b 2d       	mov	r16, r11
 a2a:	10 e0       	ldi	r17, 0x00	; 0
 a2c:	11 95       	neg	r17
 a2e:	01 95       	neg	r16
 a30:	11 09       	sbc	r17, r1
 a32:	4f 3f       	cpi	r20, 0xFF	; 255
 a34:	bf ef       	ldi	r27, 0xFF	; 255
 a36:	5b 07       	cpc	r21, r27
 a38:	21 f4       	brne	.+8      	; 0xa42 <__stack+0x143>
 a3a:	d6 01       	movw	r26, r12
 a3c:	ac 92       	st	X, r10
 a3e:	11 96       	adiw	r26, 0x01	; 1
 a40:	6d 01       	movw	r12, r26
 a42:	64 17       	cp	r22, r20
 a44:	75 07       	cpc	r23, r21
 a46:	2c f0       	brlt	.+10     	; 0xa52 <__stack+0x153>
 a48:	84 16       	cp	r8, r20
 a4a:	95 06       	cpc	r9, r21
 a4c:	14 f4       	brge	.+4      	; 0xa52 <__stack+0x153>
 a4e:	81 81       	ldd	r24, Z+1	; 0x01
 a50:	01 c0       	rjmp	.+2      	; 0xa54 <__stack+0x155>
 a52:	80 e3       	ldi	r24, 0x30	; 48
 a54:	41 50       	subi	r20, 0x01	; 1
 a56:	51 09       	sbc	r21, r1
 a58:	31 96       	adiw	r30, 0x01	; 1
 a5a:	d6 01       	movw	r26, r12
 a5c:	11 96       	adiw	r26, 0x01	; 1
 a5e:	7d 01       	movw	r14, r26
 a60:	40 17       	cp	r20, r16
 a62:	51 07       	cpc	r21, r17
 a64:	24 f0       	brlt	.+8      	; 0xa6e <__stack+0x16f>
 a66:	d6 01       	movw	r26, r12
 a68:	8c 93       	st	X, r24
 a6a:	67 01       	movw	r12, r14
 a6c:	e2 cf       	rjmp	.-60     	; 0xa32 <__stack+0x133>
 a6e:	64 17       	cp	r22, r20
 a70:	75 07       	cpc	r23, r21
 a72:	39 f4       	brne	.+14     	; 0xa82 <__stack+0x183>
 a74:	96 33       	cpi	r25, 0x36	; 54
 a76:	20 f4       	brcc	.+8      	; 0xa80 <__stack+0x181>
 a78:	95 33       	cpi	r25, 0x35	; 53
 a7a:	19 f4       	brne	.+6      	; 0xa82 <__stack+0x183>
 a7c:	31 11       	cpse	r19, r1
 a7e:	01 c0       	rjmp	.+2      	; 0xa82 <__stack+0x183>
 a80:	81 e3       	ldi	r24, 0x31	; 49
 a82:	f6 01       	movw	r30, r12
 a84:	80 83       	st	Z, r24
 a86:	f7 01       	movw	r30, r14
 a88:	82 2f       	mov	r24, r18
 a8a:	90 e2       	ldi	r25, 0x20	; 32
 a8c:	88 23       	and	r24, r24
 a8e:	19 f0       	breq	.+6      	; 0xa96 <__stack+0x197>
 a90:	91 93       	st	Z+, r25
 a92:	81 50       	subi	r24, 0x01	; 1
 a94:	fb cf       	rjmp	.-10     	; 0xa8c <__stack+0x18d>
 a96:	f7 01       	movw	r30, r14
 a98:	e2 0f       	add	r30, r18
 a9a:	f1 1d       	adc	r31, r1
 a9c:	10 82       	st	Z, r1
 a9e:	80 e0       	ldi	r24, 0x00	; 0
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	29 96       	adiw	r28, 0x09	; 9
 aa4:	ec e0       	ldi	r30, 0x0C	; 12
 aa6:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <__epilogue_restores__+0xc>

00000aaa <__ftoa_engine>:
 aaa:	28 30       	cpi	r18, 0x08	; 8
 aac:	08 f0       	brcs	.+2      	; 0xab0 <__ftoa_engine+0x6>
 aae:	27 e0       	ldi	r18, 0x07	; 7
 ab0:	33 27       	eor	r19, r19
 ab2:	da 01       	movw	r26, r20
 ab4:	99 0f       	add	r25, r25
 ab6:	31 1d       	adc	r19, r1
 ab8:	87 fd       	sbrc	r24, 7
 aba:	91 60       	ori	r25, 0x01	; 1
 abc:	00 96       	adiw	r24, 0x00	; 0
 abe:	61 05       	cpc	r22, r1
 ac0:	71 05       	cpc	r23, r1
 ac2:	39 f4       	brne	.+14     	; 0xad2 <__ftoa_engine+0x28>
 ac4:	32 60       	ori	r19, 0x02	; 2
 ac6:	2e 5f       	subi	r18, 0xFE	; 254
 ac8:	3d 93       	st	X+, r19
 aca:	30 e3       	ldi	r19, 0x30	; 48
 acc:	2a 95       	dec	r18
 ace:	e1 f7       	brne	.-8      	; 0xac8 <__ftoa_engine+0x1e>
 ad0:	08 95       	ret
 ad2:	9f 3f       	cpi	r25, 0xFF	; 255
 ad4:	30 f0       	brcs	.+12     	; 0xae2 <__ftoa_engine+0x38>
 ad6:	80 38       	cpi	r24, 0x80	; 128
 ad8:	71 05       	cpc	r23, r1
 ada:	61 05       	cpc	r22, r1
 adc:	09 f0       	breq	.+2      	; 0xae0 <__ftoa_engine+0x36>
 ade:	3c 5f       	subi	r19, 0xFC	; 252
 ae0:	3c 5f       	subi	r19, 0xFC	; 252
 ae2:	3d 93       	st	X+, r19
 ae4:	91 30       	cpi	r25, 0x01	; 1
 ae6:	08 f0       	brcs	.+2      	; 0xaea <__ftoa_engine+0x40>
 ae8:	80 68       	ori	r24, 0x80	; 128
 aea:	91 1d       	adc	r25, r1
 aec:	df 93       	push	r29
 aee:	cf 93       	push	r28
 af0:	1f 93       	push	r17
 af2:	0f 93       	push	r16
 af4:	ff 92       	push	r15
 af6:	ef 92       	push	r14
 af8:	19 2f       	mov	r17, r25
 afa:	98 7f       	andi	r25, 0xF8	; 248
 afc:	96 95       	lsr	r25
 afe:	e9 2f       	mov	r30, r25
 b00:	96 95       	lsr	r25
 b02:	96 95       	lsr	r25
 b04:	e9 0f       	add	r30, r25
 b06:	ff 27       	eor	r31, r31
 b08:	e2 5f       	subi	r30, 0xF2	; 242
 b0a:	fe 4f       	sbci	r31, 0xFE	; 254
 b0c:	99 27       	eor	r25, r25
 b0e:	33 27       	eor	r19, r19
 b10:	ee 24       	eor	r14, r14
 b12:	ff 24       	eor	r15, r15
 b14:	a7 01       	movw	r20, r14
 b16:	e7 01       	movw	r28, r14
 b18:	05 90       	lpm	r0, Z+
 b1a:	08 94       	sec
 b1c:	07 94       	ror	r0
 b1e:	28 f4       	brcc	.+10     	; 0xb2a <__ftoa_engine+0x80>
 b20:	36 0f       	add	r19, r22
 b22:	e7 1e       	adc	r14, r23
 b24:	f8 1e       	adc	r15, r24
 b26:	49 1f       	adc	r20, r25
 b28:	51 1d       	adc	r21, r1
 b2a:	66 0f       	add	r22, r22
 b2c:	77 1f       	adc	r23, r23
 b2e:	88 1f       	adc	r24, r24
 b30:	99 1f       	adc	r25, r25
 b32:	06 94       	lsr	r0
 b34:	a1 f7       	brne	.-24     	; 0xb1e <__ftoa_engine+0x74>
 b36:	05 90       	lpm	r0, Z+
 b38:	07 94       	ror	r0
 b3a:	28 f4       	brcc	.+10     	; 0xb46 <__ftoa_engine+0x9c>
 b3c:	e7 0e       	add	r14, r23
 b3e:	f8 1e       	adc	r15, r24
 b40:	49 1f       	adc	r20, r25
 b42:	56 1f       	adc	r21, r22
 b44:	c1 1d       	adc	r28, r1
 b46:	77 0f       	add	r23, r23
 b48:	88 1f       	adc	r24, r24
 b4a:	99 1f       	adc	r25, r25
 b4c:	66 1f       	adc	r22, r22
 b4e:	06 94       	lsr	r0
 b50:	a1 f7       	brne	.-24     	; 0xb3a <__ftoa_engine+0x90>
 b52:	05 90       	lpm	r0, Z+
 b54:	07 94       	ror	r0
 b56:	28 f4       	brcc	.+10     	; 0xb62 <__ftoa_engine+0xb8>
 b58:	f8 0e       	add	r15, r24
 b5a:	49 1f       	adc	r20, r25
 b5c:	56 1f       	adc	r21, r22
 b5e:	c7 1f       	adc	r28, r23
 b60:	d1 1d       	adc	r29, r1
 b62:	88 0f       	add	r24, r24
 b64:	99 1f       	adc	r25, r25
 b66:	66 1f       	adc	r22, r22
 b68:	77 1f       	adc	r23, r23
 b6a:	06 94       	lsr	r0
 b6c:	a1 f7       	brne	.-24     	; 0xb56 <__ftoa_engine+0xac>
 b6e:	05 90       	lpm	r0, Z+
 b70:	07 94       	ror	r0
 b72:	20 f4       	brcc	.+8      	; 0xb7c <__ftoa_engine+0xd2>
 b74:	49 0f       	add	r20, r25
 b76:	56 1f       	adc	r21, r22
 b78:	c7 1f       	adc	r28, r23
 b7a:	d8 1f       	adc	r29, r24
 b7c:	99 0f       	add	r25, r25
 b7e:	66 1f       	adc	r22, r22
 b80:	77 1f       	adc	r23, r23
 b82:	88 1f       	adc	r24, r24
 b84:	06 94       	lsr	r0
 b86:	a9 f7       	brne	.-22     	; 0xb72 <__ftoa_engine+0xc8>
 b88:	84 91       	lpm	r24, Z
 b8a:	10 95       	com	r17
 b8c:	17 70       	andi	r17, 0x07	; 7
 b8e:	41 f0       	breq	.+16     	; 0xba0 <__ftoa_engine+0xf6>
 b90:	d6 95       	lsr	r29
 b92:	c7 95       	ror	r28
 b94:	57 95       	ror	r21
 b96:	47 95       	ror	r20
 b98:	f7 94       	ror	r15
 b9a:	e7 94       	ror	r14
 b9c:	1a 95       	dec	r17
 b9e:	c1 f7       	brne	.-16     	; 0xb90 <__ftoa_engine+0xe6>
 ba0:	e4 eb       	ldi	r30, 0xB4	; 180
 ba2:	f0 e0       	ldi	r31, 0x00	; 0
 ba4:	68 94       	set
 ba6:	15 90       	lpm	r1, Z+
 ba8:	15 91       	lpm	r17, Z+
 baa:	35 91       	lpm	r19, Z+
 bac:	65 91       	lpm	r22, Z+
 bae:	95 91       	lpm	r25, Z+
 bb0:	05 90       	lpm	r0, Z+
 bb2:	7f e2       	ldi	r23, 0x2F	; 47
 bb4:	73 95       	inc	r23
 bb6:	e1 18       	sub	r14, r1
 bb8:	f1 0a       	sbc	r15, r17
 bba:	43 0b       	sbc	r20, r19
 bbc:	56 0b       	sbc	r21, r22
 bbe:	c9 0b       	sbc	r28, r25
 bc0:	d0 09       	sbc	r29, r0
 bc2:	c0 f7       	brcc	.-16     	; 0xbb4 <__ftoa_engine+0x10a>
 bc4:	e1 0c       	add	r14, r1
 bc6:	f1 1e       	adc	r15, r17
 bc8:	43 1f       	adc	r20, r19
 bca:	56 1f       	adc	r21, r22
 bcc:	c9 1f       	adc	r28, r25
 bce:	d0 1d       	adc	r29, r0
 bd0:	7e f4       	brtc	.+30     	; 0xbf0 <__ftoa_engine+0x146>
 bd2:	70 33       	cpi	r23, 0x30	; 48
 bd4:	11 f4       	brne	.+4      	; 0xbda <__ftoa_engine+0x130>
 bd6:	8a 95       	dec	r24
 bd8:	e6 cf       	rjmp	.-52     	; 0xba6 <__ftoa_engine+0xfc>
 bda:	e8 94       	clt
 bdc:	01 50       	subi	r16, 0x01	; 1
 bde:	30 f0       	brcs	.+12     	; 0xbec <__ftoa_engine+0x142>
 be0:	08 0f       	add	r16, r24
 be2:	0a f4       	brpl	.+2      	; 0xbe6 <__ftoa_engine+0x13c>
 be4:	00 27       	eor	r16, r16
 be6:	02 17       	cp	r16, r18
 be8:	08 f4       	brcc	.+2      	; 0xbec <__ftoa_engine+0x142>
 bea:	20 2f       	mov	r18, r16
 bec:	23 95       	inc	r18
 bee:	02 2f       	mov	r16, r18
 bf0:	7a 33       	cpi	r23, 0x3A	; 58
 bf2:	28 f0       	brcs	.+10     	; 0xbfe <__ftoa_engine+0x154>
 bf4:	79 e3       	ldi	r23, 0x39	; 57
 bf6:	7d 93       	st	X+, r23
 bf8:	2a 95       	dec	r18
 bfa:	e9 f7       	brne	.-6      	; 0xbf6 <__ftoa_engine+0x14c>
 bfc:	10 c0       	rjmp	.+32     	; 0xc1e <__ftoa_engine+0x174>
 bfe:	7d 93       	st	X+, r23
 c00:	2a 95       	dec	r18
 c02:	89 f6       	brne	.-94     	; 0xba6 <__ftoa_engine+0xfc>
 c04:	06 94       	lsr	r0
 c06:	97 95       	ror	r25
 c08:	67 95       	ror	r22
 c0a:	37 95       	ror	r19
 c0c:	17 95       	ror	r17
 c0e:	17 94       	ror	r1
 c10:	e1 18       	sub	r14, r1
 c12:	f1 0a       	sbc	r15, r17
 c14:	43 0b       	sbc	r20, r19
 c16:	56 0b       	sbc	r21, r22
 c18:	c9 0b       	sbc	r28, r25
 c1a:	d0 09       	sbc	r29, r0
 c1c:	98 f0       	brcs	.+38     	; 0xc44 <__ftoa_engine+0x19a>
 c1e:	23 95       	inc	r18
 c20:	7e 91       	ld	r23, -X
 c22:	73 95       	inc	r23
 c24:	7a 33       	cpi	r23, 0x3A	; 58
 c26:	08 f0       	brcs	.+2      	; 0xc2a <__ftoa_engine+0x180>
 c28:	70 e3       	ldi	r23, 0x30	; 48
 c2a:	7c 93       	st	X, r23
 c2c:	20 13       	cpse	r18, r16
 c2e:	b8 f7       	brcc	.-18     	; 0xc1e <__ftoa_engine+0x174>
 c30:	7e 91       	ld	r23, -X
 c32:	70 61       	ori	r23, 0x10	; 16
 c34:	7d 93       	st	X+, r23
 c36:	30 f0       	brcs	.+12     	; 0xc44 <__ftoa_engine+0x19a>
 c38:	83 95       	inc	r24
 c3a:	71 e3       	ldi	r23, 0x31	; 49
 c3c:	7d 93       	st	X+, r23
 c3e:	70 e3       	ldi	r23, 0x30	; 48
 c40:	2a 95       	dec	r18
 c42:	e1 f7       	brne	.-8      	; 0xc3c <__ftoa_engine+0x192>
 c44:	11 24       	eor	r1, r1
 c46:	ef 90       	pop	r14
 c48:	ff 90       	pop	r15
 c4a:	0f 91       	pop	r16
 c4c:	1f 91       	pop	r17
 c4e:	cf 91       	pop	r28
 c50:	df 91       	pop	r29
 c52:	99 27       	eor	r25, r25
 c54:	87 fd       	sbrc	r24, 7
 c56:	90 95       	com	r25
 c58:	08 95       	ret

00000c5a <__prologue_saves__>:
 c5a:	2f 92       	push	r2
 c5c:	3f 92       	push	r3
 c5e:	4f 92       	push	r4
 c60:	5f 92       	push	r5
 c62:	6f 92       	push	r6
 c64:	7f 92       	push	r7
 c66:	8f 92       	push	r8
 c68:	9f 92       	push	r9
 c6a:	af 92       	push	r10
 c6c:	bf 92       	push	r11
 c6e:	cf 92       	push	r12
 c70:	df 92       	push	r13
 c72:	ef 92       	push	r14
 c74:	ff 92       	push	r15
 c76:	0f 93       	push	r16
 c78:	1f 93       	push	r17
 c7a:	cf 93       	push	r28
 c7c:	df 93       	push	r29
 c7e:	cd b7       	in	r28, 0x3d	; 61
 c80:	de b7       	in	r29, 0x3e	; 62
 c82:	ca 1b       	sub	r28, r26
 c84:	db 0b       	sbc	r29, r27
 c86:	0f b6       	in	r0, 0x3f	; 63
 c88:	f8 94       	cli
 c8a:	de bf       	out	0x3e, r29	; 62
 c8c:	0f be       	out	0x3f, r0	; 63
 c8e:	cd bf       	out	0x3d, r28	; 61
 c90:	09 94       	ijmp

00000c92 <__epilogue_restores__>:
 c92:	2a 88       	ldd	r2, Y+18	; 0x12
 c94:	39 88       	ldd	r3, Y+17	; 0x11
 c96:	48 88       	ldd	r4, Y+16	; 0x10
 c98:	5f 84       	ldd	r5, Y+15	; 0x0f
 c9a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c9c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c9e:	8c 84       	ldd	r8, Y+12	; 0x0c
 ca0:	9b 84       	ldd	r9, Y+11	; 0x0b
 ca2:	aa 84       	ldd	r10, Y+10	; 0x0a
 ca4:	b9 84       	ldd	r11, Y+9	; 0x09
 ca6:	c8 84       	ldd	r12, Y+8	; 0x08
 ca8:	df 80       	ldd	r13, Y+7	; 0x07
 caa:	ee 80       	ldd	r14, Y+6	; 0x06
 cac:	fd 80       	ldd	r15, Y+5	; 0x05
 cae:	0c 81       	ldd	r16, Y+4	; 0x04
 cb0:	1b 81       	ldd	r17, Y+3	; 0x03
 cb2:	aa 81       	ldd	r26, Y+2	; 0x02
 cb4:	b9 81       	ldd	r27, Y+1	; 0x01
 cb6:	ce 0f       	add	r28, r30
 cb8:	d1 1d       	adc	r29, r1
 cba:	0f b6       	in	r0, 0x3f	; 63
 cbc:	f8 94       	cli
 cbe:	de bf       	out	0x3e, r29	; 62
 cc0:	0f be       	out	0x3f, r0	; 63
 cc2:	cd bf       	out	0x3d, r28	; 61
 cc4:	ed 01       	movw	r28, r26
 cc6:	08 95       	ret

00000cc8 <_exit>:
 cc8:	f8 94       	cli

00000cca <__stop_program>:
 cca:	ff cf       	rjmp	.-2      	; 0xcca <__stop_program>
