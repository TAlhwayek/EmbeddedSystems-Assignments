
DA6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  000011c8  0000125c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800146  00800146  000012a2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001300  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001340  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ed7  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b02  00000000  00000000  0000229f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005e2  00000000  00000000  00002da1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00003384  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a6  00000000  00000000  000034e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c3  00000000  00000000  00003a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003d4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_32>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__vector_35>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	e8 ec       	ldi	r30, 0xC8	; 200
     1ca:	f1 e1       	ldi	r31, 0x11	; 17
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a6 34       	cpi	r26, 0x46	; 70
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a6 e4       	ldi	r26, 0x46	; 70
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	ac 35       	cpi	r26, 0x5C	; 92
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 0b 02 	call	0x416	; 0x416 <main>
     1ec:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <USART_Init>:

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR0A & (1 << RXC0)));				/* Wait until new data receive */
	return(UDR0);									/* Get and return received data */
}
     1f4:	e1 ec       	ldi	r30, 0xC1	; 193
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	20 81       	ld	r18, Z
     1fa:	28 61       	ori	r18, 0x18	; 24
     1fc:	20 83       	st	Z, r18
     1fe:	e2 ec       	ldi	r30, 0xC2	; 194
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	20 81       	ld	r18, Z
     204:	26 60       	ori	r18, 0x06	; 6
     206:	20 83       	st	Z, r18
     208:	dc 01       	movw	r26, r24
     20a:	cb 01       	movw	r24, r22
     20c:	88 0f       	add	r24, r24
     20e:	99 1f       	adc	r25, r25
     210:	aa 1f       	adc	r26, r26
     212:	bb 1f       	adc	r27, r27
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	aa 1f       	adc	r26, r26
     21a:	bb 1f       	adc	r27, r27
     21c:	9c 01       	movw	r18, r24
     21e:	ad 01       	movw	r20, r26
     220:	22 0f       	add	r18, r18
     222:	33 1f       	adc	r19, r19
     224:	44 1f       	adc	r20, r20
     226:	55 1f       	adc	r21, r21
     228:	22 0f       	add	r18, r18
     22a:	33 1f       	adc	r19, r19
     22c:	44 1f       	adc	r20, r20
     22e:	55 1f       	adc	r21, r21
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	74 e2       	ldi	r23, 0x24	; 36
     234:	84 ef       	ldi	r24, 0xF4	; 244
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__udivmodsi4>
     23c:	8f ef       	ldi	r24, 0xFF	; 255
     23e:	82 0f       	add	r24, r18
     240:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     244:	da 01       	movw	r26, r20
     246:	c9 01       	movw	r24, r18
     248:	01 97       	sbiw	r24, 0x01	; 1
     24a:	a1 09       	sbc	r26, r1
     24c:	b1 09       	sbc	r27, r1
     24e:	89 2f       	mov	r24, r25
     250:	9a 2f       	mov	r25, r26
     252:	ab 2f       	mov	r26, r27
     254:	bb 27       	eor	r27, r27
     256:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     25a:	08 95       	ret

0000025c <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;									/* Write data to be transmitting in UDR */
     25c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
     260:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     264:	85 ff       	sbrs	r24, 5
     266:	fc cf       	rjmp	.-8      	; 0x260 <USART_TxChar+0x4>
}
     268:	08 95       	ret

0000026a <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */
{
     26a:	0f 93       	push	r16
     26c:	1f 93       	push	r17
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	8c 01       	movw	r16, r24
	int i=0;
     274:	c0 e0       	ldi	r28, 0x00	; 0
     276:	d0 e0       	ldi	r29, 0x00	; 0
	while (str[i]!=0)
     278:	03 c0       	rjmp	.+6      	; 0x280 <USART_SendString+0x16>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     27a:	0e 94 2e 01 	call	0x25c	; 0x25c <USART_TxChar>
		i++;
     27e:	21 96       	adiw	r28, 0x01	; 1
}

void USART_SendString(char *str)					/* Send string of USART data function */
{
	int i=0;
	while (str[i]!=0)
     280:	f8 01       	movw	r30, r16
     282:	ec 0f       	add	r30, r28
     284:	fd 1f       	adc	r31, r29
     286:	80 81       	ld	r24, Z
     288:	81 11       	cpse	r24, r1
     28a:	f7 cf       	rjmp	.-18     	; 0x27a <USART_SendString+0x10>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
}
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	1f 91       	pop	r17
     292:	0f 91       	pop	r16
     294:	08 95       	ret

00000296 <ADC_Init>:

void ADC_Init() /* ADC Initialization function */
{
	DDRC = 0x00;   /* Make ADC port as input */
     296:	17 b8       	out	0x07, r1	; 7
	ADCSRA = 0x87; /* Enable ADC, with freq/128  */
     298:	87 e8       	ldi	r24, 0x87	; 135
     29a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADMUX = 0x40;  /* Vref: Avcc, ADC channel: 0 */
     29e:	80 e4       	ldi	r24, 0x40	; 64
     2a0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     2a4:	08 95       	ret

000002a6 <ADC_Read>:
}

int ADC_Read(char channel) /* ADC Read function */
{
	ADMUX = 0x40 | (channel & 0x07); /* set input channel to read */
     2a6:	87 70       	andi	r24, 0x07	; 7
     2a8:	80 64       	ori	r24, 0x40	; 64
     2aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA |= (1 << ADSC);           /* Start ADC conversion */
     2ae:	ea e7       	ldi	r30, 0x7A	; 122
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	80 64       	ori	r24, 0x40	; 64
     2b6:	80 83       	st	Z, r24
	while (!(ADCSRA & (1 << ADIF)))
     2b8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     2bc:	84 ff       	sbrs	r24, 4
     2be:	fc cf       	rjmp	.-8      	; 0x2b8 <ADC_Read+0x12>
	; /* Wait until end of conversion by polling ADC interrupt flag */
	ADCSRA |= (1 << ADIF); /* Clear interrupt flag */
     2c0:	ea e7       	ldi	r30, 0x7A	; 122
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	80 81       	ld	r24, Z
     2c6:	80 61       	ori	r24, 0x10	; 16
     2c8:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ca:	85 e0       	ldi	r24, 0x05	; 5
     2cc:	8a 95       	dec	r24
     2ce:	f1 f7       	brne	.-4      	; 0x2cc <ADC_Read+0x26>
     2d0:	00 00       	nop
	_delay_us(1);          /* Wait a little bit */
	return ADCW;           /* Return ADC word */
     2d2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     2d6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     2da:	08 95       	ret

000002dc <InitTimer3>:

// Initialize timer
void InitTimer3(void) {

	// Set Initial Timer value
	TCNT3 = 0;
     2dc:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7f8095>
     2e0:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7f8094>
	////First capture on rising edge
	TCCR3A = 0;
     2e4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7f8090>
	TCCR3B = (0 << ICNC3) | (1 << ICES3);
     2e8:	80 e4       	ldi	r24, 0x40	; 64
     2ea:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7f8091>
	TCCR3C = 0;
     2ee:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <__TEXT_REGION_LENGTH__+0x7f8092>
	// Interrupt setup
	// ICIE1: Input capture
	// TOIE1: Timer1 overflow
	TIFR3 = (1 << ICF3) | (1 << TOV3);    // clear pending
     2f2:	81 e2       	ldi	r24, 0x21	; 33
     2f4:	88 bb       	out	0x18, r24	; 24
	TIMSK3 = (1 << ICIE3) | (1 << TOIE3); // and enable
     2f6:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f8071>
     2fa:	08 95       	ret

000002fc <StartTimer3>:
}

void StartTimer3(void) {
	// Start timer with a pre-scaler = 64
	TCCR3B |= (1 << CS30);
     2fc:	e1 e9       	ldi	r30, 0x91	; 145
     2fe:	f0 e0       	ldi	r31, 0x00	; 0
     300:	80 81       	ld	r24, Z
     302:	81 60       	ori	r24, 0x01	; 1
     304:	80 83       	st	Z, r24
	// Enable global interrupts
	sei();
     306:	78 94       	sei
     308:	08 95       	ret

0000030a <__vector_32>:
}

volatile uint32_t tickv, ticks;
// capture ISR
ISR(TIMER3_CAPT_vect) {
     30a:	1f 92       	push	r1
     30c:	0f 92       	push	r0
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	0f 92       	push	r0
     312:	11 24       	eor	r1, r1
     314:	4f 93       	push	r20
     316:	5f 93       	push	r21
     318:	6f 93       	push	r22
     31a:	7f 93       	push	r23
     31c:	8f 93       	push	r24
     31e:	9f 93       	push	r25
     320:	af 93       	push	r26
     322:	bf 93       	push	r27
	tickv = ICR3; // save duration of last revolution
     324:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x7f8096>
     328:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x7f8097>
     32c:	a0 e0       	ldi	r26, 0x00	; 0
     32e:	b0 e0       	ldi	r27, 0x00	; 0
     330:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <tickv>
     334:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <tickv+0x1>
     338:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <tickv+0x2>
     33c:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <tickv+0x3>
	revTickAvg = (uint32_t)(tickv) + ((uint32_t)T3Ovs2 * 0x10000L);
     340:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end>
     344:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <__data_end+0x1>
     348:	a0 e0       	ldi	r26, 0x00	; 0
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	dc 01       	movw	r26, r24
     34e:	99 27       	eor	r25, r25
     350:	88 27       	eor	r24, r24
     352:	40 91 54 01 	lds	r20, 0x0154	; 0x800154 <tickv>
     356:	50 91 55 01 	lds	r21, 0x0155	; 0x800155 <tickv+0x1>
     35a:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <tickv+0x2>
     35e:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <tickv+0x3>
     362:	84 0f       	add	r24, r20
     364:	95 1f       	adc	r25, r21
     366:	a6 1f       	adc	r26, r22
     368:	b7 1f       	adc	r27, r23
     36a:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <revTickAvg>
     36e:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <revTickAvg+0x1>
     372:	a0 93 4e 01 	sts	0x014E, r26	; 0x80014e <revTickAvg+0x2>
     376:	b0 93 4f 01 	sts	0x014F, r27	; 0x80014f <revTickAvg+0x3>
	revCtr++;  // add to revolution count
     37a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <revCtr>
     37e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <revCtr+0x1>
     382:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <revCtr+0x2>
     386:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <revCtr+0x3>
     38a:	01 96       	adiw	r24, 0x01	; 1
     38c:	a1 1d       	adc	r26, r1
     38e:	b1 1d       	adc	r27, r1
     390:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <revCtr>
     394:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <revCtr+0x1>
     398:	a0 93 52 01 	sts	0x0152, r26	; 0x800152 <revCtr+0x2>
     39c:	b0 93 53 01 	sts	0x0153, r27	; 0x800153 <revCtr+0x3>
	TCNT3 = 0; // restart timer for next revolution
     3a0:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7f8095>
     3a4:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7f8094>
	T3Ovs2 = 0;
     3a8:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__data_end+0x1>
     3ac:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <__data_end>
}
     3b0:	bf 91       	pop	r27
     3b2:	af 91       	pop	r26
     3b4:	9f 91       	pop	r25
     3b6:	8f 91       	pop	r24
     3b8:	7f 91       	pop	r23
     3ba:	6f 91       	pop	r22
     3bc:	5f 91       	pop	r21
     3be:	4f 91       	pop	r20
     3c0:	0f 90       	pop	r0
     3c2:	0f be       	out	0x3f, r0	; 63
     3c4:	0f 90       	pop	r0
     3c6:	1f 90       	pop	r1
     3c8:	18 95       	reti

000003ca <__vector_35>:
// Overflow ISR
ISR(TIMER3_OVF_vect) {
     3ca:	1f 92       	push	r1
     3cc:	0f 92       	push	r0
     3ce:	0f b6       	in	r0, 0x3f	; 63
     3d0:	0f 92       	push	r0
     3d2:	11 24       	eor	r1, r1
     3d4:	8f 93       	push	r24
     3d6:	9f 93       	push	r25
	// increment overflow counter
	T3Ovs2++;
     3d8:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end>
     3dc:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <__data_end+0x1>
     3e0:	01 96       	adiw	r24, 0x01	; 1
     3e2:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <__data_end+0x1>
     3e6:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end>
}
     3ea:	9f 91       	pop	r25
     3ec:	8f 91       	pop	r24
     3ee:	0f 90       	pop	r0
     3f0:	0f be       	out	0x3f, r0	; 63
     3f2:	0f 90       	pop	r0
     3f4:	1f 90       	pop	r1
     3f6:	18 95       	reti

000003f8 <init_IO>:

void init_IO(void){
	//Setup IO
	SHIFT_REGISTER |= (DATA | LATCH | CLOCK);	//Set control pins as outputs
     3f8:	84 b1       	in	r24, 0x04	; 4
     3fa:	8c 62       	ori	r24, 0x2C	; 44
     3fc:	84 b9       	out	0x04, r24	; 4
	SHIFT_PORT &= ~(DATA | LATCH | CLOCK);		//Set control pins low
     3fe:	85 b1       	in	r24, 0x05	; 5
     400:	83 7d       	andi	r24, 0xD3	; 211
     402:	85 b9       	out	0x05, r24	; 5
     404:	08 95       	ret

00000406 <init_SPI>:
}

void init_SPI(void){
	//Setup SPI
	SPCR0 = (1<<SPE) | (1<<MSTR);	//Start SPI as Master
     406:	80 e5       	ldi	r24, 0x50	; 80
     408:	8c bd       	out	0x2c, r24	; 44
     40a:	08 95       	ret

0000040c <spi_send>:
}

void spi_send(unsigned char byte){
	SPDR0 = byte;			//Shift in some data
     40c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));	//Wait for SPI process to finish
     40e:	0d b4       	in	r0, 0x2d	; 45
     410:	07 fe       	sbrs	r0, 7
     412:	fd cf       	rjmp	.-6      	; 0x40e <spi_send+0x2>
}
     414:	08 95       	ret

00000416 <main>:
/* Segment byte maps for numbers 0 to 9 */
const uint8_t SEGMENT_MAP[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99,
0x92, 0x82, 0xF8, 0X80, 0X90};


int main(void) {
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	cd b7       	in	r28, 0x3d	; 61
     41c:	de b7       	in	r29, 0x3e	; 62
     41e:	c8 54       	subi	r28, 0x48	; 72
     420:	d1 09       	sbc	r29, r1
     422:	0f b6       	in	r0, 0x3f	; 63
     424:	f8 94       	cli
     426:	de bf       	out	0x3e, r29	; 62
     428:	0f be       	out	0x3f, r0	; 63
     42a:	cd bf       	out	0x3d, r28	; 61
	
	// For USART printing
	// (used to show atmel output in DA PDF)
	char outs[72];
	USART_Init(57600);
     42c:	60 e0       	ldi	r22, 0x00	; 0
     42e:	71 ee       	ldi	r23, 0xE1	; 225
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <USART_Init>
	USART_SendString("Connected!\r\n");
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	91 e0       	ldi	r25, 0x01	; 1
     43c:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
	USART_SendString("TIMER3 ICP Running \r\n");
     440:	8d e0       	ldi	r24, 0x0D	; 13
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
	
	// Initialize and start timer3
	InitTimer3();
     448:	0e 94 6e 01 	call	0x2dc	; 0x2dc <InitTimer3>
	StartTimer3();
     44c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <StartTimer3>

	// Initialize SPI
	init_IO();
     450:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <init_IO>
	init_SPI();
     454:	0e 94 03 02 	call	0x406	; 0x406 <init_SPI>
	
	DDRD |= (1 << DDD6); /* Make OC0 pin as Output */
     458:	8a b1       	in	r24, 0x0a	; 10
     45a:	80 64       	ori	r24, 0x40	; 64
     45c:	8a b9       	out	0x0a, r24	; 10
	ADC_Init();								/* Initialize ADC */
     45e:	0e 94 4b 01 	call	0x296	; 0x296 <ADC_Init>
	TCNT0 = 0;								/* Set timer0 count zero */
     462:	16 bc       	out	0x26, r1	; 38
	TCCR0A |= (1<<WGM00)|(1<<WGM01)|(1<<COM0A1);
     464:	84 b5       	in	r24, 0x24	; 36
     466:	83 68       	ori	r24, 0x83	; 131
     468:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS00)|(1<<CS02);/* Set Fast PWM with Fosc/64 Timer0 clock */
     46a:	85 b5       	in	r24, 0x25	; 37
     46c:	85 60       	ori	r24, 0x05	; 5
     46e:	85 bd       	out	0x25, r24	; 37
	sei();                 /* Enable Global Interrupt */
     470:	78 94       	sei
	
	OCR0A = 80;
     472:	80 e5       	ldi	r24, 0x50	; 80
     474:	87 bd       	out	0x27, r24	; 39
	
	while (1) {

		// Update time from ADC
		OCR0A = ADC_Read(0)/4;
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	0e 94 53 01 	call	0x2a6	; 0x2a6 <ADC_Read>
     47c:	99 23       	and	r25, r25
     47e:	0c f4       	brge	.+2      	; 0x482 <main+0x6c>
     480:	03 96       	adiw	r24, 0x03	; 3
     482:	95 95       	asr	r25
     484:	87 95       	ror	r24
     486:	95 95       	asr	r25
     488:	87 95       	ror	r24
     48a:	87 bd       	out	0x27, r24	; 39
		
		// Get RPM
		int RPM = (60 * 8000000) / (64 * revTickAvg);
     48c:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <revTickAvg>
     490:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <revTickAvg+0x1>
     494:	a0 91 4e 01 	lds	r26, 0x014E	; 0x80014e <revTickAvg+0x2>
     498:	b0 91 4f 01 	lds	r27, 0x014F	; 0x80014f <revTickAvg+0x3>
     49c:	88 0f       	add	r24, r24
     49e:	99 1f       	adc	r25, r25
     4a0:	aa 1f       	adc	r26, r26
     4a2:	bb 1f       	adc	r27, r27
     4a4:	88 0f       	add	r24, r24
     4a6:	99 1f       	adc	r25, r25
     4a8:	aa 1f       	adc	r26, r26
     4aa:	bb 1f       	adc	r27, r27
     4ac:	88 0f       	add	r24, r24
     4ae:	99 1f       	adc	r25, r25
     4b0:	aa 1f       	adc	r26, r26
     4b2:	bb 1f       	adc	r27, r27
     4b4:	88 0f       	add	r24, r24
     4b6:	99 1f       	adc	r25, r25
     4b8:	aa 1f       	adc	r26, r26
     4ba:	bb 1f       	adc	r27, r27
     4bc:	9c 01       	movw	r18, r24
     4be:	ad 01       	movw	r20, r26
     4c0:	22 0f       	add	r18, r18
     4c2:	33 1f       	adc	r19, r19
     4c4:	44 1f       	adc	r20, r20
     4c6:	55 1f       	adc	r21, r21
     4c8:	22 0f       	add	r18, r18
     4ca:	33 1f       	adc	r19, r19
     4cc:	44 1f       	adc	r20, r20
     4ce:	55 1f       	adc	r21, r21
     4d0:	60 e0       	ldi	r22, 0x00	; 0
     4d2:	78 e3       	ldi	r23, 0x38	; 56
     4d4:	8c e9       	ldi	r24, 0x9C	; 156
     4d6:	9c e1       	ldi	r25, 0x1C	; 28
     4d8:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__udivmodsi4>
     4dc:	c2 2e       	mov	r12, r18
     4de:	b3 2e       	mov	r11, r19
     4e0:	82 2f       	mov	r24, r18
     4e2:	93 2f       	mov	r25, r19
     4e4:	7c 01       	movw	r14, r24
		
		// Print RPM 
		USART_SendString("Ticks: ");
     4e6:	83 e2       	ldi	r24, 0x23	; 35
     4e8:	91 e0       	ldi	r25, 0x01	; 1
     4ea:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
		snprintf(outs, sizeof(outs), "%f ", (float)revTickAvg);
     4ee:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <revTickAvg>
     4f2:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <revTickAvg+0x1>
     4f6:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <revTickAvg+0x2>
     4fa:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <revTickAvg+0x3>
     4fe:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     502:	9f 93       	push	r25
     504:	8f 93       	push	r24
     506:	7f 93       	push	r23
     508:	6f 93       	push	r22
     50a:	8b e2       	ldi	r24, 0x2B	; 43
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	9f 93       	push	r25
     510:	8f 93       	push	r24
     512:	1f 92       	push	r1
     514:	0f 2e       	mov	r0, r31
     516:	f8 e4       	ldi	r31, 0x48	; 72
     518:	df 2e       	mov	r13, r31
     51a:	f0 2d       	mov	r31, r0
     51c:	df 92       	push	r13
     51e:	8e 01       	movw	r16, r28
     520:	0f 5f       	subi	r16, 0xFF	; 255
     522:	1f 4f       	sbci	r17, 0xFF	; 255
     524:	1f 93       	push	r17
     526:	0f 93       	push	r16
     528:	0e 94 54 08 	call	0x10a8	; 0x10a8 <snprintf>
		USART_SendString(outs);
     52c:	c8 01       	movw	r24, r16
     52e:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
		USART_SendString("   RPM: ");
     532:	8f e2       	ldi	r24, 0x2F	; 47
     534:	91 e0       	ldi	r25, 0x01	; 1
     536:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
		snprintf(outs, sizeof(outs), "%d ", (short)RPM);
     53a:	bf 92       	push	r11
     53c:	cf 92       	push	r12
     53e:	88 e3       	ldi	r24, 0x38	; 56
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	9f 93       	push	r25
     544:	8f 93       	push	r24
     546:	1f 92       	push	r1
     548:	df 92       	push	r13
     54a:	1f 93       	push	r17
     54c:	0f 93       	push	r16
     54e:	0e 94 54 08 	call	0x10a8	; 0x10a8 <snprintf>
		USART_SendString(outs);
     552:	c8 01       	movw	r24, r16
     554:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
		USART_SendString(" \r\n");
     558:	8f e1       	ldi	r24, 0x1F	; 31
     55a:	91 e0       	ldi	r25, 0x01	; 1
     55c:	0e 94 35 01 	call	0x26a	; 0x26a <USART_SendString>
		
		// Initialize 7-segment displays
		SHIFT_PORT &= ~LATCH;
     560:	85 b1       	in	r24, 0x05	; 5
     562:	8b 7f       	andi	r24, 0xFB	; 251
     564:	85 b9       	out	0x05, r24	; 5
		
		// Sending RPM value to 7-segment displays
		// Send tens digit to 1st 7-segment display
		spi_send((unsigned char)SEGMENT_MAP[RPM / 10]);
     566:	c7 01       	movw	r24, r14
     568:	6a e0       	ldi	r22, 0x0A	; 10
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	0e 94 a9 06 	call	0xd52	; 0xd52 <__divmodhi4>
     570:	8c 01       	movw	r16, r24
     572:	fb 01       	movw	r30, r22
     574:	e4 5c       	subi	r30, 0xC4	; 196
     576:	fe 4f       	sbci	r31, 0xFE	; 254
     578:	80 81       	ld	r24, Z
     57a:	0e 94 06 02 	call	0x40c	; 0x40c <spi_send>
		spi_send((unsigned char)0xF1);
     57e:	81 ef       	ldi	r24, 0xF1	; 241
     580:	0e 94 06 02 	call	0x40c	; 0x40c <spi_send>
		//Toggle latch to copy data to the storage register
		SHIFT_PORT |= LATCH;
     584:	85 b1       	in	r24, 0x05	; 5
     586:	84 60       	ori	r24, 0x04	; 4
     588:	85 b9       	out	0x05, r24	; 5
		SHIFT_PORT &= ~LATCH;
     58a:	85 b1       	in	r24, 0x05	; 5
     58c:	8b 7f       	andi	r24, 0xFB	; 251
     58e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     590:	2f ef       	ldi	r18, 0xFF	; 255
     592:	81 ee       	ldi	r24, 0xE1	; 225
     594:	94 e0       	ldi	r25, 0x04	; 4
     596:	21 50       	subi	r18, 0x01	; 1
     598:	80 40       	sbci	r24, 0x00	; 0
     59a:	90 40       	sbci	r25, 0x00	; 0
     59c:	e1 f7       	brne	.-8      	; 0x596 <main+0x180>
     59e:	00 c0       	rjmp	.+0      	; 0x5a0 <main+0x18a>
     5a0:	00 00       	nop
		// Slight delay to see the digit
		_delay_ms(100);
		
		// Send ones digit to 2nd 7-segment display
		spi_send((unsigned char)SEGMENT_MAP[RPM % 10]);
     5a2:	f8 01       	movw	r30, r16
     5a4:	e4 5c       	subi	r30, 0xC4	; 196
     5a6:	fe 4f       	sbci	r31, 0xFE	; 254
     5a8:	80 81       	ld	r24, Z
     5aa:	0e 94 06 02 	call	0x40c	; 0x40c <spi_send>
		spi_send((unsigned char)0xF2);
     5ae:	82 ef       	ldi	r24, 0xF2	; 242
     5b0:	0e 94 06 02 	call	0x40c	; 0x40c <spi_send>
		//Toggle latch to copy data to the storage register
		SHIFT_PORT |= LATCH;
     5b4:	85 b1       	in	r24, 0x05	; 5
     5b6:	84 60       	ori	r24, 0x04	; 4
     5b8:	85 b9       	out	0x05, r24	; 5
		SHIFT_PORT &= ~LATCH;
     5ba:	85 b1       	in	r24, 0x05	; 5
     5bc:	8b 7f       	andi	r24, 0xFB	; 251
     5be:	85 b9       	out	0x05, r24	; 5
     5c0:	2f ef       	ldi	r18, 0xFF	; 255
     5c2:	81 ee       	ldi	r24, 0xE1	; 225
     5c4:	94 e0       	ldi	r25, 0x04	; 4
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	80 40       	sbci	r24, 0x00	; 0
     5ca:	90 40       	sbci	r25, 0x00	; 0
     5cc:	e1 f7       	brne	.-8      	; 0x5c6 <main+0x1b0>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <main+0x1ba>
     5d0:	00 00       	nop
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	de bf       	out	0x3e, r29	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	cd bf       	out	0x3d, r28	; 61
     5dc:	4c cf       	rjmp	.-360    	; 0x476 <main+0x60>

000005de <__floatunsisf>:
     5de:	e8 94       	clt
     5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__floatsisf+0x12>

000005e2 <__floatsisf>:
     5e2:	97 fb       	bst	r25, 7
     5e4:	3e f4       	brtc	.+14     	; 0x5f4 <__floatsisf+0x12>
     5e6:	90 95       	com	r25
     5e8:	80 95       	com	r24
     5ea:	70 95       	com	r23
     5ec:	61 95       	neg	r22
     5ee:	7f 4f       	sbci	r23, 0xFF	; 255
     5f0:	8f 4f       	sbci	r24, 0xFF	; 255
     5f2:	9f 4f       	sbci	r25, 0xFF	; 255
     5f4:	99 23       	and	r25, r25
     5f6:	a9 f0       	breq	.+42     	; 0x622 <__floatsisf+0x40>
     5f8:	f9 2f       	mov	r31, r25
     5fa:	96 e9       	ldi	r25, 0x96	; 150
     5fc:	bb 27       	eor	r27, r27
     5fe:	93 95       	inc	r25
     600:	f6 95       	lsr	r31
     602:	87 95       	ror	r24
     604:	77 95       	ror	r23
     606:	67 95       	ror	r22
     608:	b7 95       	ror	r27
     60a:	f1 11       	cpse	r31, r1
     60c:	f8 cf       	rjmp	.-16     	; 0x5fe <__floatsisf+0x1c>
     60e:	fa f4       	brpl	.+62     	; 0x64e <__floatsisf+0x6c>
     610:	bb 0f       	add	r27, r27
     612:	11 f4       	brne	.+4      	; 0x618 <__floatsisf+0x36>
     614:	60 ff       	sbrs	r22, 0
     616:	1b c0       	rjmp	.+54     	; 0x64e <__floatsisf+0x6c>
     618:	6f 5f       	subi	r22, 0xFF	; 255
     61a:	7f 4f       	sbci	r23, 0xFF	; 255
     61c:	8f 4f       	sbci	r24, 0xFF	; 255
     61e:	9f 4f       	sbci	r25, 0xFF	; 255
     620:	16 c0       	rjmp	.+44     	; 0x64e <__floatsisf+0x6c>
     622:	88 23       	and	r24, r24
     624:	11 f0       	breq	.+4      	; 0x62a <__floatsisf+0x48>
     626:	96 e9       	ldi	r25, 0x96	; 150
     628:	11 c0       	rjmp	.+34     	; 0x64c <__floatsisf+0x6a>
     62a:	77 23       	and	r23, r23
     62c:	21 f0       	breq	.+8      	; 0x636 <__floatsisf+0x54>
     62e:	9e e8       	ldi	r25, 0x8E	; 142
     630:	87 2f       	mov	r24, r23
     632:	76 2f       	mov	r23, r22
     634:	05 c0       	rjmp	.+10     	; 0x640 <__floatsisf+0x5e>
     636:	66 23       	and	r22, r22
     638:	71 f0       	breq	.+28     	; 0x656 <__floatsisf+0x74>
     63a:	96 e8       	ldi	r25, 0x86	; 134
     63c:	86 2f       	mov	r24, r22
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	2a f0       	brmi	.+10     	; 0x64e <__floatsisf+0x6c>
     644:	9a 95       	dec	r25
     646:	66 0f       	add	r22, r22
     648:	77 1f       	adc	r23, r23
     64a:	88 1f       	adc	r24, r24
     64c:	da f7       	brpl	.-10     	; 0x644 <__floatsisf+0x62>
     64e:	88 0f       	add	r24, r24
     650:	96 95       	lsr	r25
     652:	87 95       	ror	r24
     654:	97 f9       	bld	r25, 7
     656:	08 95       	ret

00000658 <vfprintf>:
     658:	a0 e1       	ldi	r26, 0x10	; 16
     65a:	b0 e0       	ldi	r27, 0x00	; 0
     65c:	e2 e3       	ldi	r30, 0x32	; 50
     65e:	f3 e0       	ldi	r31, 0x03	; 3
     660:	0c 94 df 06 	jmp	0xdbe	; 0xdbe <__prologue_saves__>
     664:	7c 01       	movw	r14, r24
     666:	1b 01       	movw	r2, r22
     668:	6a 01       	movw	r12, r20
     66a:	fc 01       	movw	r30, r24
     66c:	17 82       	std	Z+7, r1	; 0x07
     66e:	16 82       	std	Z+6, r1	; 0x06
     670:	83 81       	ldd	r24, Z+3	; 0x03
     672:	81 ff       	sbrs	r24, 1
     674:	44 c3       	rjmp	.+1672   	; 0xcfe <__stack+0x3ff>
     676:	9e 01       	movw	r18, r28
     678:	2f 5f       	subi	r18, 0xFF	; 255
     67a:	3f 4f       	sbci	r19, 0xFF	; 255
     67c:	39 01       	movw	r6, r18
     67e:	f7 01       	movw	r30, r14
     680:	93 81       	ldd	r25, Z+3	; 0x03
     682:	f1 01       	movw	r30, r2
     684:	93 fd       	sbrc	r25, 3
     686:	85 91       	lpm	r24, Z+
     688:	93 ff       	sbrs	r25, 3
     68a:	81 91       	ld	r24, Z+
     68c:	1f 01       	movw	r2, r30
     68e:	88 23       	and	r24, r24
     690:	09 f4       	brne	.+2      	; 0x694 <vfprintf+0x3c>
     692:	31 c3       	rjmp	.+1634   	; 0xcf6 <__stack+0x3f7>
     694:	85 32       	cpi	r24, 0x25	; 37
     696:	39 f4       	brne	.+14     	; 0x6a6 <vfprintf+0x4e>
     698:	93 fd       	sbrc	r25, 3
     69a:	85 91       	lpm	r24, Z+
     69c:	93 ff       	sbrs	r25, 3
     69e:	81 91       	ld	r24, Z+
     6a0:	1f 01       	movw	r2, r30
     6a2:	85 32       	cpi	r24, 0x25	; 37
     6a4:	39 f4       	brne	.+14     	; 0x6b4 <vfprintf+0x5c>
     6a6:	b7 01       	movw	r22, r14
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     6ae:	56 01       	movw	r10, r12
     6b0:	65 01       	movw	r12, r10
     6b2:	e5 cf       	rjmp	.-54     	; 0x67e <vfprintf+0x26>
     6b4:	10 e0       	ldi	r17, 0x00	; 0
     6b6:	51 2c       	mov	r5, r1
     6b8:	91 2c       	mov	r9, r1
     6ba:	ff e1       	ldi	r31, 0x1F	; 31
     6bc:	f9 15       	cp	r31, r9
     6be:	d8 f0       	brcs	.+54     	; 0x6f6 <vfprintf+0x9e>
     6c0:	8b 32       	cpi	r24, 0x2B	; 43
     6c2:	79 f0       	breq	.+30     	; 0x6e2 <vfprintf+0x8a>
     6c4:	38 f4       	brcc	.+14     	; 0x6d4 <vfprintf+0x7c>
     6c6:	80 32       	cpi	r24, 0x20	; 32
     6c8:	79 f0       	breq	.+30     	; 0x6e8 <vfprintf+0x90>
     6ca:	83 32       	cpi	r24, 0x23	; 35
     6cc:	a1 f4       	brne	.+40     	; 0x6f6 <vfprintf+0x9e>
     6ce:	f9 2d       	mov	r31, r9
     6d0:	f0 61       	ori	r31, 0x10	; 16
     6d2:	2e c0       	rjmp	.+92     	; 0x730 <vfprintf+0xd8>
     6d4:	8d 32       	cpi	r24, 0x2D	; 45
     6d6:	61 f0       	breq	.+24     	; 0x6f0 <vfprintf+0x98>
     6d8:	80 33       	cpi	r24, 0x30	; 48
     6da:	69 f4       	brne	.+26     	; 0x6f6 <vfprintf+0x9e>
     6dc:	29 2d       	mov	r18, r9
     6de:	21 60       	ori	r18, 0x01	; 1
     6e0:	2d c0       	rjmp	.+90     	; 0x73c <vfprintf+0xe4>
     6e2:	39 2d       	mov	r19, r9
     6e4:	32 60       	ori	r19, 0x02	; 2
     6e6:	93 2e       	mov	r9, r19
     6e8:	89 2d       	mov	r24, r9
     6ea:	84 60       	ori	r24, 0x04	; 4
     6ec:	98 2e       	mov	r9, r24
     6ee:	2a c0       	rjmp	.+84     	; 0x744 <vfprintf+0xec>
     6f0:	e9 2d       	mov	r30, r9
     6f2:	e8 60       	ori	r30, 0x08	; 8
     6f4:	15 c0       	rjmp	.+42     	; 0x720 <vfprintf+0xc8>
     6f6:	97 fc       	sbrc	r9, 7
     6f8:	2d c0       	rjmp	.+90     	; 0x754 <vfprintf+0xfc>
     6fa:	20 ed       	ldi	r18, 0xD0	; 208
     6fc:	28 0f       	add	r18, r24
     6fe:	2a 30       	cpi	r18, 0x0A	; 10
     700:	88 f4       	brcc	.+34     	; 0x724 <vfprintf+0xcc>
     702:	96 fe       	sbrs	r9, 6
     704:	06 c0       	rjmp	.+12     	; 0x712 <vfprintf+0xba>
     706:	3a e0       	ldi	r19, 0x0A	; 10
     708:	13 9f       	mul	r17, r19
     70a:	20 0d       	add	r18, r0
     70c:	11 24       	eor	r1, r1
     70e:	12 2f       	mov	r17, r18
     710:	19 c0       	rjmp	.+50     	; 0x744 <vfprintf+0xec>
     712:	8a e0       	ldi	r24, 0x0A	; 10
     714:	58 9e       	mul	r5, r24
     716:	20 0d       	add	r18, r0
     718:	11 24       	eor	r1, r1
     71a:	52 2e       	mov	r5, r18
     71c:	e9 2d       	mov	r30, r9
     71e:	e0 62       	ori	r30, 0x20	; 32
     720:	9e 2e       	mov	r9, r30
     722:	10 c0       	rjmp	.+32     	; 0x744 <vfprintf+0xec>
     724:	8e 32       	cpi	r24, 0x2E	; 46
     726:	31 f4       	brne	.+12     	; 0x734 <vfprintf+0xdc>
     728:	96 fc       	sbrc	r9, 6
     72a:	e5 c2       	rjmp	.+1482   	; 0xcf6 <__stack+0x3f7>
     72c:	f9 2d       	mov	r31, r9
     72e:	f0 64       	ori	r31, 0x40	; 64
     730:	9f 2e       	mov	r9, r31
     732:	08 c0       	rjmp	.+16     	; 0x744 <vfprintf+0xec>
     734:	8c 36       	cpi	r24, 0x6C	; 108
     736:	21 f4       	brne	.+8      	; 0x740 <vfprintf+0xe8>
     738:	29 2d       	mov	r18, r9
     73a:	20 68       	ori	r18, 0x80	; 128
     73c:	92 2e       	mov	r9, r18
     73e:	02 c0       	rjmp	.+4      	; 0x744 <vfprintf+0xec>
     740:	88 36       	cpi	r24, 0x68	; 104
     742:	41 f4       	brne	.+16     	; 0x754 <vfprintf+0xfc>
     744:	f1 01       	movw	r30, r2
     746:	93 fd       	sbrc	r25, 3
     748:	85 91       	lpm	r24, Z+
     74a:	93 ff       	sbrs	r25, 3
     74c:	81 91       	ld	r24, Z+
     74e:	1f 01       	movw	r2, r30
     750:	81 11       	cpse	r24, r1
     752:	b3 cf       	rjmp	.-154    	; 0x6ba <vfprintf+0x62>
     754:	9b eb       	ldi	r25, 0xBB	; 187
     756:	98 0f       	add	r25, r24
     758:	93 30       	cpi	r25, 0x03	; 3
     75a:	20 f4       	brcc	.+8      	; 0x764 <vfprintf+0x10c>
     75c:	99 2d       	mov	r25, r9
     75e:	90 61       	ori	r25, 0x10	; 16
     760:	80 5e       	subi	r24, 0xE0	; 224
     762:	07 c0       	rjmp	.+14     	; 0x772 <vfprintf+0x11a>
     764:	9b e9       	ldi	r25, 0x9B	; 155
     766:	98 0f       	add	r25, r24
     768:	93 30       	cpi	r25, 0x03	; 3
     76a:	08 f0       	brcs	.+2      	; 0x76e <vfprintf+0x116>
     76c:	66 c1       	rjmp	.+716    	; 0xa3a <__stack+0x13b>
     76e:	99 2d       	mov	r25, r9
     770:	9f 7e       	andi	r25, 0xEF	; 239
     772:	96 ff       	sbrs	r25, 6
     774:	16 e0       	ldi	r17, 0x06	; 6
     776:	9f 73       	andi	r25, 0x3F	; 63
     778:	99 2e       	mov	r9, r25
     77a:	85 36       	cpi	r24, 0x65	; 101
     77c:	19 f4       	brne	.+6      	; 0x784 <vfprintf+0x12c>
     77e:	90 64       	ori	r25, 0x40	; 64
     780:	99 2e       	mov	r9, r25
     782:	08 c0       	rjmp	.+16     	; 0x794 <vfprintf+0x13c>
     784:	86 36       	cpi	r24, 0x66	; 102
     786:	21 f4       	brne	.+8      	; 0x790 <vfprintf+0x138>
     788:	39 2f       	mov	r19, r25
     78a:	30 68       	ori	r19, 0x80	; 128
     78c:	93 2e       	mov	r9, r19
     78e:	02 c0       	rjmp	.+4      	; 0x794 <vfprintf+0x13c>
     790:	11 11       	cpse	r17, r1
     792:	11 50       	subi	r17, 0x01	; 1
     794:	97 fe       	sbrs	r9, 7
     796:	07 c0       	rjmp	.+14     	; 0x7a6 <vfprintf+0x14e>
     798:	1c 33       	cpi	r17, 0x3C	; 60
     79a:	50 f4       	brcc	.+20     	; 0x7b0 <vfprintf+0x158>
     79c:	44 24       	eor	r4, r4
     79e:	43 94       	inc	r4
     7a0:	41 0e       	add	r4, r17
     7a2:	27 e0       	ldi	r18, 0x07	; 7
     7a4:	0b c0       	rjmp	.+22     	; 0x7bc <vfprintf+0x164>
     7a6:	18 30       	cpi	r17, 0x08	; 8
     7a8:	38 f0       	brcs	.+14     	; 0x7b8 <vfprintf+0x160>
     7aa:	27 e0       	ldi	r18, 0x07	; 7
     7ac:	17 e0       	ldi	r17, 0x07	; 7
     7ae:	05 c0       	rjmp	.+10     	; 0x7ba <vfprintf+0x162>
     7b0:	27 e0       	ldi	r18, 0x07	; 7
     7b2:	9c e3       	ldi	r25, 0x3C	; 60
     7b4:	49 2e       	mov	r4, r25
     7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x164>
     7b8:	21 2f       	mov	r18, r17
     7ba:	41 2c       	mov	r4, r1
     7bc:	56 01       	movw	r10, r12
     7be:	84 e0       	ldi	r24, 0x04	; 4
     7c0:	a8 0e       	add	r10, r24
     7c2:	b1 1c       	adc	r11, r1
     7c4:	f6 01       	movw	r30, r12
     7c6:	60 81       	ld	r22, Z
     7c8:	71 81       	ldd	r23, Z+1	; 0x01
     7ca:	82 81       	ldd	r24, Z+2	; 0x02
     7cc:	93 81       	ldd	r25, Z+3	; 0x03
     7ce:	04 2d       	mov	r16, r4
     7d0:	a3 01       	movw	r20, r6
     7d2:	0e 94 2a 07 	call	0xe54	; 0xe54 <__ftoa_engine>
     7d6:	6c 01       	movw	r12, r24
     7d8:	f9 81       	ldd	r31, Y+1	; 0x01
     7da:	fc 87       	std	Y+12, r31	; 0x0c
     7dc:	f0 ff       	sbrs	r31, 0
     7de:	02 c0       	rjmp	.+4      	; 0x7e4 <vfprintf+0x18c>
     7e0:	f3 ff       	sbrs	r31, 3
     7e2:	06 c0       	rjmp	.+12     	; 0x7f0 <vfprintf+0x198>
     7e4:	91 fc       	sbrc	r9, 1
     7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0x19c>
     7e8:	92 fe       	sbrs	r9, 2
     7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <vfprintf+0x1a0>
     7ec:	00 e2       	ldi	r16, 0x20	; 32
     7ee:	05 c0       	rjmp	.+10     	; 0x7fa <vfprintf+0x1a2>
     7f0:	0d e2       	ldi	r16, 0x2D	; 45
     7f2:	03 c0       	rjmp	.+6      	; 0x7fa <vfprintf+0x1a2>
     7f4:	0b e2       	ldi	r16, 0x2B	; 43
     7f6:	01 c0       	rjmp	.+2      	; 0x7fa <vfprintf+0x1a2>
     7f8:	00 e0       	ldi	r16, 0x00	; 0
     7fa:	8c 85       	ldd	r24, Y+12	; 0x0c
     7fc:	8c 70       	andi	r24, 0x0C	; 12
     7fe:	19 f0       	breq	.+6      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     800:	01 11       	cpse	r16, r1
     802:	5a c2       	rjmp	.+1204   	; 0xcb8 <__stack+0x3b9>
     804:	9b c2       	rjmp	.+1334   	; 0xd3c <__stack+0x43d>
     806:	97 fe       	sbrs	r9, 7
     808:	10 c0       	rjmp	.+32     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     80a:	4c 0c       	add	r4, r12
     80c:	fc 85       	ldd	r31, Y+12	; 0x0c
     80e:	f4 ff       	sbrs	r31, 4
     810:	04 c0       	rjmp	.+8      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     812:	8a 81       	ldd	r24, Y+2	; 0x02
     814:	81 33       	cpi	r24, 0x31	; 49
     816:	09 f4       	brne	.+2      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     818:	4a 94       	dec	r4
     81a:	14 14       	cp	r1, r4
     81c:	74 f5       	brge	.+92     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
     81e:	28 e0       	ldi	r18, 0x08	; 8
     820:	24 15       	cp	r18, r4
     822:	78 f5       	brcc	.+94     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     824:	88 e0       	ldi	r24, 0x08	; 8
     826:	48 2e       	mov	r4, r24
     828:	2c c0       	rjmp	.+88     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     82a:	96 fc       	sbrc	r9, 6
     82c:	2a c0       	rjmp	.+84     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     82e:	81 2f       	mov	r24, r17
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	8c 15       	cp	r24, r12
     834:	9d 05       	cpc	r25, r13
     836:	9c f0       	brlt	.+38     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     838:	3c ef       	ldi	r19, 0xFC	; 252
     83a:	c3 16       	cp	r12, r19
     83c:	3f ef       	ldi	r19, 0xFF	; 255
     83e:	d3 06       	cpc	r13, r19
     840:	74 f0       	brlt	.+28     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     842:	89 2d       	mov	r24, r9
     844:	80 68       	ori	r24, 0x80	; 128
     846:	98 2e       	mov	r9, r24
     848:	0a c0       	rjmp	.+20     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     84a:	e2 e0       	ldi	r30, 0x02	; 2
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	ec 0f       	add	r30, r28
     850:	fd 1f       	adc	r31, r29
     852:	e1 0f       	add	r30, r17
     854:	f1 1d       	adc	r31, r1
     856:	80 81       	ld	r24, Z
     858:	80 33       	cpi	r24, 0x30	; 48
     85a:	19 f4       	brne	.+6      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
     85c:	11 50       	subi	r17, 0x01	; 1
     85e:	11 11       	cpse	r17, r1
     860:	f4 cf       	rjmp	.-24     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     862:	97 fe       	sbrs	r9, 7
     864:	0e c0       	rjmp	.+28     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     866:	44 24       	eor	r4, r4
     868:	43 94       	inc	r4
     86a:	41 0e       	add	r4, r17
     86c:	81 2f       	mov	r24, r17
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	c8 16       	cp	r12, r24
     872:	d9 06       	cpc	r13, r25
     874:	2c f4       	brge	.+10     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
     876:	1c 19       	sub	r17, r12
     878:	04 c0       	rjmp	.+8      	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     87a:	44 24       	eor	r4, r4
     87c:	43 94       	inc	r4
     87e:	01 c0       	rjmp	.+2      	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     880:	10 e0       	ldi	r17, 0x00	; 0
     882:	97 fe       	sbrs	r9, 7
     884:	06 c0       	rjmp	.+12     	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     886:	1c 14       	cp	r1, r12
     888:	1d 04       	cpc	r1, r13
     88a:	34 f4       	brge	.+12     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
     88c:	c6 01       	movw	r24, r12
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	05 c0       	rjmp	.+10     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
     892:	85 e0       	ldi	r24, 0x05	; 5
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	02 c0       	rjmp	.+4      	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	01 11       	cpse	r16, r1
     89e:	01 96       	adiw	r24, 0x01	; 1
     8a0:	11 23       	and	r17, r17
     8a2:	31 f0       	breq	.+12     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
     8a4:	21 2f       	mov	r18, r17
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	2f 5f       	subi	r18, 0xFF	; 255
     8aa:	3f 4f       	sbci	r19, 0xFF	; 255
     8ac:	82 0f       	add	r24, r18
     8ae:	93 1f       	adc	r25, r19
     8b0:	25 2d       	mov	r18, r5
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	82 17       	cp	r24, r18
     8b6:	93 07       	cpc	r25, r19
     8b8:	14 f4       	brge	.+4      	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     8ba:	58 1a       	sub	r5, r24
     8bc:	01 c0       	rjmp	.+2      	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     8be:	51 2c       	mov	r5, r1
     8c0:	89 2d       	mov	r24, r9
     8c2:	89 70       	andi	r24, 0x09	; 9
     8c4:	49 f4       	brne	.+18     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8c6:	55 20       	and	r5, r5
     8c8:	39 f0       	breq	.+14     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8ca:	b7 01       	movw	r22, r14
     8cc:	80 e2       	ldi	r24, 0x20	; 32
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     8d4:	5a 94       	dec	r5
     8d6:	f7 cf       	rjmp	.-18     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
     8d8:	00 23       	and	r16, r16
     8da:	29 f0       	breq	.+10     	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     8dc:	b7 01       	movw	r22, r14
     8de:	80 2f       	mov	r24, r16
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     8e6:	93 fc       	sbrc	r9, 3
     8e8:	09 c0       	rjmp	.+18     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
     8ea:	55 20       	and	r5, r5
     8ec:	39 f0       	breq	.+14     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
     8ee:	b7 01       	movw	r22, r14
     8f0:	80 e3       	ldi	r24, 0x30	; 48
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     8f8:	5a 94       	dec	r5
     8fa:	f7 cf       	rjmp	.-18     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
     8fc:	97 fe       	sbrs	r9, 7
     8fe:	4c c0       	rjmp	.+152    	; 0x998 <__stack+0x99>
     900:	46 01       	movw	r8, r12
     902:	d7 fe       	sbrs	r13, 7
     904:	02 c0       	rjmp	.+4      	; 0x90a <__stack+0xb>
     906:	81 2c       	mov	r8, r1
     908:	91 2c       	mov	r9, r1
     90a:	c6 01       	movw	r24, r12
     90c:	88 19       	sub	r24, r8
     90e:	99 09       	sbc	r25, r9
     910:	f3 01       	movw	r30, r6
     912:	e8 0f       	add	r30, r24
     914:	f9 1f       	adc	r31, r25
     916:	fe 87       	std	Y+14, r31	; 0x0e
     918:	ed 87       	std	Y+13, r30	; 0x0d
     91a:	96 01       	movw	r18, r12
     91c:	24 19       	sub	r18, r4
     91e:	31 09       	sbc	r19, r1
     920:	38 8b       	std	Y+16, r19	; 0x10
     922:	2f 87       	std	Y+15, r18	; 0x0f
     924:	01 2f       	mov	r16, r17
     926:	10 e0       	ldi	r17, 0x00	; 0
     928:	11 95       	neg	r17
     92a:	01 95       	neg	r16
     92c:	11 09       	sbc	r17, r1
     92e:	3f ef       	ldi	r19, 0xFF	; 255
     930:	83 16       	cp	r8, r19
     932:	93 06       	cpc	r9, r19
     934:	29 f4       	brne	.+10     	; 0x940 <__stack+0x41>
     936:	b7 01       	movw	r22, r14
     938:	8e e2       	ldi	r24, 0x2E	; 46
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     940:	c8 14       	cp	r12, r8
     942:	d9 04       	cpc	r13, r9
     944:	4c f0       	brlt	.+18     	; 0x958 <__stack+0x59>
     946:	8f 85       	ldd	r24, Y+15	; 0x0f
     948:	98 89       	ldd	r25, Y+16	; 0x10
     94a:	88 15       	cp	r24, r8
     94c:	99 05       	cpc	r25, r9
     94e:	24 f4       	brge	.+8      	; 0x958 <__stack+0x59>
     950:	ed 85       	ldd	r30, Y+13	; 0x0d
     952:	fe 85       	ldd	r31, Y+14	; 0x0e
     954:	81 81       	ldd	r24, Z+1	; 0x01
     956:	01 c0       	rjmp	.+2      	; 0x95a <__stack+0x5b>
     958:	80 e3       	ldi	r24, 0x30	; 48
     95a:	f1 e0       	ldi	r31, 0x01	; 1
     95c:	8f 1a       	sub	r8, r31
     95e:	91 08       	sbc	r9, r1
     960:	2d 85       	ldd	r18, Y+13	; 0x0d
     962:	3e 85       	ldd	r19, Y+14	; 0x0e
     964:	2f 5f       	subi	r18, 0xFF	; 255
     966:	3f 4f       	sbci	r19, 0xFF	; 255
     968:	3e 87       	std	Y+14, r19	; 0x0e
     96a:	2d 87       	std	Y+13, r18	; 0x0d
     96c:	80 16       	cp	r8, r16
     96e:	91 06       	cpc	r9, r17
     970:	2c f0       	brlt	.+10     	; 0x97c <__stack+0x7d>
     972:	b7 01       	movw	r22, r14
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     97a:	d9 cf       	rjmp	.-78     	; 0x92e <__stack+0x2f>
     97c:	c8 14       	cp	r12, r8
     97e:	d9 04       	cpc	r13, r9
     980:	41 f4       	brne	.+16     	; 0x992 <__stack+0x93>
     982:	9a 81       	ldd	r25, Y+2	; 0x02
     984:	96 33       	cpi	r25, 0x36	; 54
     986:	20 f4       	brcc	.+8      	; 0x990 <__stack+0x91>
     988:	95 33       	cpi	r25, 0x35	; 53
     98a:	19 f4       	brne	.+6      	; 0x992 <__stack+0x93>
     98c:	3c 85       	ldd	r19, Y+12	; 0x0c
     98e:	34 ff       	sbrs	r19, 4
     990:	81 e3       	ldi	r24, 0x31	; 49
     992:	b7 01       	movw	r22, r14
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	4e c0       	rjmp	.+156    	; 0xa34 <__stack+0x135>
     998:	8a 81       	ldd	r24, Y+2	; 0x02
     99a:	81 33       	cpi	r24, 0x31	; 49
     99c:	19 f0       	breq	.+6      	; 0x9a4 <__stack+0xa5>
     99e:	9c 85       	ldd	r25, Y+12	; 0x0c
     9a0:	9f 7e       	andi	r25, 0xEF	; 239
     9a2:	9c 87       	std	Y+12, r25	; 0x0c
     9a4:	b7 01       	movw	r22, r14
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     9ac:	11 11       	cpse	r17, r1
     9ae:	05 c0       	rjmp	.+10     	; 0x9ba <__stack+0xbb>
     9b0:	94 fc       	sbrc	r9, 4
     9b2:	18 c0       	rjmp	.+48     	; 0x9e4 <__stack+0xe5>
     9b4:	85 e6       	ldi	r24, 0x65	; 101
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	17 c0       	rjmp	.+46     	; 0x9e8 <__stack+0xe9>
     9ba:	b7 01       	movw	r22, r14
     9bc:	8e e2       	ldi	r24, 0x2E	; 46
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     9c4:	1e 5f       	subi	r17, 0xFE	; 254
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	01 e0       	ldi	r16, 0x01	; 1
     9ca:	08 0f       	add	r16, r24
     9cc:	f3 01       	movw	r30, r6
     9ce:	e8 0f       	add	r30, r24
     9d0:	f1 1d       	adc	r31, r1
     9d2:	80 81       	ld	r24, Z
     9d4:	b7 01       	movw	r22, r14
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     9dc:	80 2f       	mov	r24, r16
     9de:	01 13       	cpse	r16, r17
     9e0:	f3 cf       	rjmp	.-26     	; 0x9c8 <__stack+0xc9>
     9e2:	e6 cf       	rjmp	.-52     	; 0x9b0 <__stack+0xb1>
     9e4:	85 e4       	ldi	r24, 0x45	; 69
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	b7 01       	movw	r22, r14
     9ea:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     9ee:	d7 fc       	sbrc	r13, 7
     9f0:	06 c0       	rjmp	.+12     	; 0x9fe <__stack+0xff>
     9f2:	c1 14       	cp	r12, r1
     9f4:	d1 04       	cpc	r13, r1
     9f6:	41 f4       	brne	.+16     	; 0xa08 <__stack+0x109>
     9f8:	ec 85       	ldd	r30, Y+12	; 0x0c
     9fa:	e4 ff       	sbrs	r30, 4
     9fc:	05 c0       	rjmp	.+10     	; 0xa08 <__stack+0x109>
     9fe:	d1 94       	neg	r13
     a00:	c1 94       	neg	r12
     a02:	d1 08       	sbc	r13, r1
     a04:	8d e2       	ldi	r24, 0x2D	; 45
     a06:	01 c0       	rjmp	.+2      	; 0xa0a <__stack+0x10b>
     a08:	8b e2       	ldi	r24, 0x2B	; 43
     a0a:	b7 01       	movw	r22, r14
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     a12:	80 e3       	ldi	r24, 0x30	; 48
     a14:	2a e0       	ldi	r18, 0x0A	; 10
     a16:	c2 16       	cp	r12, r18
     a18:	d1 04       	cpc	r13, r1
     a1a:	2c f0       	brlt	.+10     	; 0xa26 <__stack+0x127>
     a1c:	8f 5f       	subi	r24, 0xFF	; 255
     a1e:	fa e0       	ldi	r31, 0x0A	; 10
     a20:	cf 1a       	sub	r12, r31
     a22:	d1 08       	sbc	r13, r1
     a24:	f7 cf       	rjmp	.-18     	; 0xa14 <__stack+0x115>
     a26:	b7 01       	movw	r22, r14
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     a2e:	b7 01       	movw	r22, r14
     a30:	c6 01       	movw	r24, r12
     a32:	c0 96       	adiw	r24, 0x30	; 48
     a34:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     a38:	54 c1       	rjmp	.+680    	; 0xce2 <__stack+0x3e3>
     a3a:	83 36       	cpi	r24, 0x63	; 99
     a3c:	31 f0       	breq	.+12     	; 0xa4a <__stack+0x14b>
     a3e:	83 37       	cpi	r24, 0x73	; 115
     a40:	79 f0       	breq	.+30     	; 0xa60 <__stack+0x161>
     a42:	83 35       	cpi	r24, 0x53	; 83
     a44:	09 f0       	breq	.+2      	; 0xa48 <__stack+0x149>
     a46:	56 c0       	rjmp	.+172    	; 0xaf4 <__stack+0x1f5>
     a48:	20 c0       	rjmp	.+64     	; 0xa8a <__stack+0x18b>
     a4a:	56 01       	movw	r10, r12
     a4c:	32 e0       	ldi	r19, 0x02	; 2
     a4e:	a3 0e       	add	r10, r19
     a50:	b1 1c       	adc	r11, r1
     a52:	f6 01       	movw	r30, r12
     a54:	80 81       	ld	r24, Z
     a56:	89 83       	std	Y+1, r24	; 0x01
     a58:	01 e0       	ldi	r16, 0x01	; 1
     a5a:	10 e0       	ldi	r17, 0x00	; 0
     a5c:	63 01       	movw	r12, r6
     a5e:	12 c0       	rjmp	.+36     	; 0xa84 <__stack+0x185>
     a60:	56 01       	movw	r10, r12
     a62:	f2 e0       	ldi	r31, 0x02	; 2
     a64:	af 0e       	add	r10, r31
     a66:	b1 1c       	adc	r11, r1
     a68:	f6 01       	movw	r30, r12
     a6a:	c0 80       	ld	r12, Z
     a6c:	d1 80       	ldd	r13, Z+1	; 0x01
     a6e:	96 fe       	sbrs	r9, 6
     a70:	03 c0       	rjmp	.+6      	; 0xa78 <__stack+0x179>
     a72:	61 2f       	mov	r22, r17
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	02 c0       	rjmp	.+4      	; 0xa7c <__stack+0x17d>
     a78:	6f ef       	ldi	r22, 0xFF	; 255
     a7a:	7f ef       	ldi	r23, 0xFF	; 255
     a7c:	c6 01       	movw	r24, r12
     a7e:	0e 94 0d 08 	call	0x101a	; 0x101a <strnlen>
     a82:	8c 01       	movw	r16, r24
     a84:	f9 2d       	mov	r31, r9
     a86:	ff 77       	andi	r31, 0x7F	; 127
     a88:	14 c0       	rjmp	.+40     	; 0xab2 <__stack+0x1b3>
     a8a:	56 01       	movw	r10, r12
     a8c:	22 e0       	ldi	r18, 0x02	; 2
     a8e:	a2 0e       	add	r10, r18
     a90:	b1 1c       	adc	r11, r1
     a92:	f6 01       	movw	r30, r12
     a94:	c0 80       	ld	r12, Z
     a96:	d1 80       	ldd	r13, Z+1	; 0x01
     a98:	96 fe       	sbrs	r9, 6
     a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <__stack+0x1a3>
     a9c:	61 2f       	mov	r22, r17
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <__stack+0x1a7>
     aa2:	6f ef       	ldi	r22, 0xFF	; 255
     aa4:	7f ef       	ldi	r23, 0xFF	; 255
     aa6:	c6 01       	movw	r24, r12
     aa8:	0e 94 02 08 	call	0x1004	; 0x1004 <strnlen_P>
     aac:	8c 01       	movw	r16, r24
     aae:	f9 2d       	mov	r31, r9
     ab0:	f0 68       	ori	r31, 0x80	; 128
     ab2:	9f 2e       	mov	r9, r31
     ab4:	f3 fd       	sbrc	r31, 3
     ab6:	1a c0       	rjmp	.+52     	; 0xaec <__stack+0x1ed>
     ab8:	85 2d       	mov	r24, r5
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	08 17       	cp	r16, r24
     abe:	19 07       	cpc	r17, r25
     ac0:	a8 f4       	brcc	.+42     	; 0xaec <__stack+0x1ed>
     ac2:	b7 01       	movw	r22, r14
     ac4:	80 e2       	ldi	r24, 0x20	; 32
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     acc:	5a 94       	dec	r5
     ace:	f4 cf       	rjmp	.-24     	; 0xab8 <__stack+0x1b9>
     ad0:	f6 01       	movw	r30, r12
     ad2:	97 fc       	sbrc	r9, 7
     ad4:	85 91       	lpm	r24, Z+
     ad6:	97 fe       	sbrs	r9, 7
     ad8:	81 91       	ld	r24, Z+
     ada:	6f 01       	movw	r12, r30
     adc:	b7 01       	movw	r22, r14
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     ae4:	51 10       	cpse	r5, r1
     ae6:	5a 94       	dec	r5
     ae8:	01 50       	subi	r16, 0x01	; 1
     aea:	11 09       	sbc	r17, r1
     aec:	01 15       	cp	r16, r1
     aee:	11 05       	cpc	r17, r1
     af0:	79 f7       	brne	.-34     	; 0xad0 <__stack+0x1d1>
     af2:	f7 c0       	rjmp	.+494    	; 0xce2 <__stack+0x3e3>
     af4:	84 36       	cpi	r24, 0x64	; 100
     af6:	11 f0       	breq	.+4      	; 0xafc <__stack+0x1fd>
     af8:	89 36       	cpi	r24, 0x69	; 105
     afa:	61 f5       	brne	.+88     	; 0xb54 <__stack+0x255>
     afc:	56 01       	movw	r10, r12
     afe:	97 fe       	sbrs	r9, 7
     b00:	09 c0       	rjmp	.+18     	; 0xb14 <__stack+0x215>
     b02:	24 e0       	ldi	r18, 0x04	; 4
     b04:	a2 0e       	add	r10, r18
     b06:	b1 1c       	adc	r11, r1
     b08:	f6 01       	movw	r30, r12
     b0a:	60 81       	ld	r22, Z
     b0c:	71 81       	ldd	r23, Z+1	; 0x01
     b0e:	82 81       	ldd	r24, Z+2	; 0x02
     b10:	93 81       	ldd	r25, Z+3	; 0x03
     b12:	0a c0       	rjmp	.+20     	; 0xb28 <__stack+0x229>
     b14:	f2 e0       	ldi	r31, 0x02	; 2
     b16:	af 0e       	add	r10, r31
     b18:	b1 1c       	adc	r11, r1
     b1a:	f6 01       	movw	r30, r12
     b1c:	60 81       	ld	r22, Z
     b1e:	71 81       	ldd	r23, Z+1	; 0x01
     b20:	07 2e       	mov	r0, r23
     b22:	00 0c       	add	r0, r0
     b24:	88 0b       	sbc	r24, r24
     b26:	99 0b       	sbc	r25, r25
     b28:	f9 2d       	mov	r31, r9
     b2a:	ff 76       	andi	r31, 0x6F	; 111
     b2c:	9f 2e       	mov	r9, r31
     b2e:	97 ff       	sbrs	r25, 7
     b30:	09 c0       	rjmp	.+18     	; 0xb44 <__stack+0x245>
     b32:	90 95       	com	r25
     b34:	80 95       	com	r24
     b36:	70 95       	com	r23
     b38:	61 95       	neg	r22
     b3a:	7f 4f       	sbci	r23, 0xFF	; 255
     b3c:	8f 4f       	sbci	r24, 0xFF	; 255
     b3e:	9f 4f       	sbci	r25, 0xFF	; 255
     b40:	f0 68       	ori	r31, 0x80	; 128
     b42:	9f 2e       	mov	r9, r31
     b44:	2a e0       	ldi	r18, 0x0A	; 10
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	a3 01       	movw	r20, r6
     b4a:	0e 94 84 08 	call	0x1108	; 0x1108 <__ultoa_invert>
     b4e:	c8 2e       	mov	r12, r24
     b50:	c6 18       	sub	r12, r6
     b52:	3f c0       	rjmp	.+126    	; 0xbd2 <__stack+0x2d3>
     b54:	09 2d       	mov	r16, r9
     b56:	85 37       	cpi	r24, 0x75	; 117
     b58:	21 f4       	brne	.+8      	; 0xb62 <__stack+0x263>
     b5a:	0f 7e       	andi	r16, 0xEF	; 239
     b5c:	2a e0       	ldi	r18, 0x0A	; 10
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	1d c0       	rjmp	.+58     	; 0xb9c <__stack+0x29d>
     b62:	09 7f       	andi	r16, 0xF9	; 249
     b64:	8f 36       	cpi	r24, 0x6F	; 111
     b66:	91 f0       	breq	.+36     	; 0xb8c <__stack+0x28d>
     b68:	18 f4       	brcc	.+6      	; 0xb70 <__stack+0x271>
     b6a:	88 35       	cpi	r24, 0x58	; 88
     b6c:	59 f0       	breq	.+22     	; 0xb84 <__stack+0x285>
     b6e:	c3 c0       	rjmp	.+390    	; 0xcf6 <__stack+0x3f7>
     b70:	80 37       	cpi	r24, 0x70	; 112
     b72:	19 f0       	breq	.+6      	; 0xb7a <__stack+0x27b>
     b74:	88 37       	cpi	r24, 0x78	; 120
     b76:	11 f0       	breq	.+4      	; 0xb7c <__stack+0x27d>
     b78:	be c0       	rjmp	.+380    	; 0xcf6 <__stack+0x3f7>
     b7a:	00 61       	ori	r16, 0x10	; 16
     b7c:	04 ff       	sbrs	r16, 4
     b7e:	09 c0       	rjmp	.+18     	; 0xb92 <__stack+0x293>
     b80:	04 60       	ori	r16, 0x04	; 4
     b82:	07 c0       	rjmp	.+14     	; 0xb92 <__stack+0x293>
     b84:	94 fe       	sbrs	r9, 4
     b86:	08 c0       	rjmp	.+16     	; 0xb98 <__stack+0x299>
     b88:	06 60       	ori	r16, 0x06	; 6
     b8a:	06 c0       	rjmp	.+12     	; 0xb98 <__stack+0x299>
     b8c:	28 e0       	ldi	r18, 0x08	; 8
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	05 c0       	rjmp	.+10     	; 0xb9c <__stack+0x29d>
     b92:	20 e1       	ldi	r18, 0x10	; 16
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	02 c0       	rjmp	.+4      	; 0xb9c <__stack+0x29d>
     b98:	20 e1       	ldi	r18, 0x10	; 16
     b9a:	32 e0       	ldi	r19, 0x02	; 2
     b9c:	56 01       	movw	r10, r12
     b9e:	07 ff       	sbrs	r16, 7
     ba0:	09 c0       	rjmp	.+18     	; 0xbb4 <__stack+0x2b5>
     ba2:	84 e0       	ldi	r24, 0x04	; 4
     ba4:	a8 0e       	add	r10, r24
     ba6:	b1 1c       	adc	r11, r1
     ba8:	f6 01       	movw	r30, r12
     baa:	60 81       	ld	r22, Z
     bac:	71 81       	ldd	r23, Z+1	; 0x01
     bae:	82 81       	ldd	r24, Z+2	; 0x02
     bb0:	93 81       	ldd	r25, Z+3	; 0x03
     bb2:	08 c0       	rjmp	.+16     	; 0xbc4 <__stack+0x2c5>
     bb4:	f2 e0       	ldi	r31, 0x02	; 2
     bb6:	af 0e       	add	r10, r31
     bb8:	b1 1c       	adc	r11, r1
     bba:	f6 01       	movw	r30, r12
     bbc:	60 81       	ld	r22, Z
     bbe:	71 81       	ldd	r23, Z+1	; 0x01
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	a3 01       	movw	r20, r6
     bc6:	0e 94 84 08 	call	0x1108	; 0x1108 <__ultoa_invert>
     bca:	c8 2e       	mov	r12, r24
     bcc:	c6 18       	sub	r12, r6
     bce:	0f 77       	andi	r16, 0x7F	; 127
     bd0:	90 2e       	mov	r9, r16
     bd2:	96 fe       	sbrs	r9, 6
     bd4:	0b c0       	rjmp	.+22     	; 0xbec <__stack+0x2ed>
     bd6:	09 2d       	mov	r16, r9
     bd8:	0e 7f       	andi	r16, 0xFE	; 254
     bda:	c1 16       	cp	r12, r17
     bdc:	50 f4       	brcc	.+20     	; 0xbf2 <__stack+0x2f3>
     bde:	94 fe       	sbrs	r9, 4
     be0:	0a c0       	rjmp	.+20     	; 0xbf6 <__stack+0x2f7>
     be2:	92 fc       	sbrc	r9, 2
     be4:	08 c0       	rjmp	.+16     	; 0xbf6 <__stack+0x2f7>
     be6:	09 2d       	mov	r16, r9
     be8:	0e 7e       	andi	r16, 0xEE	; 238
     bea:	05 c0       	rjmp	.+10     	; 0xbf6 <__stack+0x2f7>
     bec:	dc 2c       	mov	r13, r12
     bee:	09 2d       	mov	r16, r9
     bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <__stack+0x2f9>
     bf2:	dc 2c       	mov	r13, r12
     bf4:	01 c0       	rjmp	.+2      	; 0xbf8 <__stack+0x2f9>
     bf6:	d1 2e       	mov	r13, r17
     bf8:	04 ff       	sbrs	r16, 4
     bfa:	0d c0       	rjmp	.+26     	; 0xc16 <__stack+0x317>
     bfc:	fe 01       	movw	r30, r28
     bfe:	ec 0d       	add	r30, r12
     c00:	f1 1d       	adc	r31, r1
     c02:	80 81       	ld	r24, Z
     c04:	80 33       	cpi	r24, 0x30	; 48
     c06:	11 f4       	brne	.+4      	; 0xc0c <__stack+0x30d>
     c08:	09 7e       	andi	r16, 0xE9	; 233
     c0a:	09 c0       	rjmp	.+18     	; 0xc1e <__stack+0x31f>
     c0c:	02 ff       	sbrs	r16, 2
     c0e:	06 c0       	rjmp	.+12     	; 0xc1c <__stack+0x31d>
     c10:	d3 94       	inc	r13
     c12:	d3 94       	inc	r13
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__stack+0x31f>
     c16:	80 2f       	mov	r24, r16
     c18:	86 78       	andi	r24, 0x86	; 134
     c1a:	09 f0       	breq	.+2      	; 0xc1e <__stack+0x31f>
     c1c:	d3 94       	inc	r13
     c1e:	03 fd       	sbrc	r16, 3
     c20:	11 c0       	rjmp	.+34     	; 0xc44 <__stack+0x345>
     c22:	00 ff       	sbrs	r16, 0
     c24:	06 c0       	rjmp	.+12     	; 0xc32 <__stack+0x333>
     c26:	1c 2d       	mov	r17, r12
     c28:	d5 14       	cp	r13, r5
     c2a:	80 f4       	brcc	.+32     	; 0xc4c <__stack+0x34d>
     c2c:	15 0d       	add	r17, r5
     c2e:	1d 19       	sub	r17, r13
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <__stack+0x34d>
     c32:	d5 14       	cp	r13, r5
     c34:	58 f4       	brcc	.+22     	; 0xc4c <__stack+0x34d>
     c36:	b7 01       	movw	r22, r14
     c38:	80 e2       	ldi	r24, 0x20	; 32
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     c40:	d3 94       	inc	r13
     c42:	f7 cf       	rjmp	.-18     	; 0xc32 <__stack+0x333>
     c44:	d5 14       	cp	r13, r5
     c46:	10 f4       	brcc	.+4      	; 0xc4c <__stack+0x34d>
     c48:	5d 18       	sub	r5, r13
     c4a:	01 c0       	rjmp	.+2      	; 0xc4e <__stack+0x34f>
     c4c:	51 2c       	mov	r5, r1
     c4e:	04 ff       	sbrs	r16, 4
     c50:	10 c0       	rjmp	.+32     	; 0xc72 <__stack+0x373>
     c52:	b7 01       	movw	r22, r14
     c54:	80 e3       	ldi	r24, 0x30	; 48
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     c5c:	02 ff       	sbrs	r16, 2
     c5e:	17 c0       	rjmp	.+46     	; 0xc8e <__stack+0x38f>
     c60:	01 fd       	sbrc	r16, 1
     c62:	03 c0       	rjmp	.+6      	; 0xc6a <__stack+0x36b>
     c64:	88 e7       	ldi	r24, 0x78	; 120
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <__stack+0x36f>
     c6a:	88 e5       	ldi	r24, 0x58	; 88
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	b7 01       	movw	r22, r14
     c70:	0c c0       	rjmp	.+24     	; 0xc8a <__stack+0x38b>
     c72:	80 2f       	mov	r24, r16
     c74:	86 78       	andi	r24, 0x86	; 134
     c76:	59 f0       	breq	.+22     	; 0xc8e <__stack+0x38f>
     c78:	01 ff       	sbrs	r16, 1
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <__stack+0x381>
     c7c:	8b e2       	ldi	r24, 0x2B	; 43
     c7e:	01 c0       	rjmp	.+2      	; 0xc82 <__stack+0x383>
     c80:	80 e2       	ldi	r24, 0x20	; 32
     c82:	07 fd       	sbrc	r16, 7
     c84:	8d e2       	ldi	r24, 0x2D	; 45
     c86:	b7 01       	movw	r22, r14
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     c8e:	c1 16       	cp	r12, r17
     c90:	38 f4       	brcc	.+14     	; 0xca0 <__stack+0x3a1>
     c92:	b7 01       	movw	r22, r14
     c94:	80 e3       	ldi	r24, 0x30	; 48
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     c9c:	11 50       	subi	r17, 0x01	; 1
     c9e:	f7 cf       	rjmp	.-18     	; 0xc8e <__stack+0x38f>
     ca0:	ca 94       	dec	r12
     ca2:	f3 01       	movw	r30, r6
     ca4:	ec 0d       	add	r30, r12
     ca6:	f1 1d       	adc	r31, r1
     ca8:	80 81       	ld	r24, Z
     caa:	b7 01       	movw	r22, r14
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     cb2:	c1 10       	cpse	r12, r1
     cb4:	f5 cf       	rjmp	.-22     	; 0xca0 <__stack+0x3a1>
     cb6:	15 c0       	rjmp	.+42     	; 0xce2 <__stack+0x3e3>
     cb8:	f4 e0       	ldi	r31, 0x04	; 4
     cba:	f5 15       	cp	r31, r5
     cbc:	60 f5       	brcc	.+88     	; 0xd16 <__stack+0x417>
     cbe:	84 e0       	ldi	r24, 0x04	; 4
     cc0:	58 1a       	sub	r5, r24
     cc2:	93 fe       	sbrs	r9, 3
     cc4:	1f c0       	rjmp	.+62     	; 0xd04 <__stack+0x405>
     cc6:	01 11       	cpse	r16, r1
     cc8:	27 c0       	rjmp	.+78     	; 0xd18 <__stack+0x419>
     cca:	2c 85       	ldd	r18, Y+12	; 0x0c
     ccc:	23 ff       	sbrs	r18, 3
     cce:	2a c0       	rjmp	.+84     	; 0xd24 <__stack+0x425>
     cd0:	04 eb       	ldi	r16, 0xB4	; 180
     cd2:	10 e0       	ldi	r17, 0x00	; 0
     cd4:	39 2d       	mov	r19, r9
     cd6:	30 71       	andi	r19, 0x10	; 16
     cd8:	93 2e       	mov	r9, r19
     cda:	f8 01       	movw	r30, r16
     cdc:	84 91       	lpm	r24, Z
     cde:	81 11       	cpse	r24, r1
     ce0:	24 c0       	rjmp	.+72     	; 0xd2a <__stack+0x42b>
     ce2:	55 20       	and	r5, r5
     ce4:	09 f4       	brne	.+2      	; 0xce8 <__stack+0x3e9>
     ce6:	e4 cc       	rjmp	.-1592   	; 0x6b0 <vfprintf+0x58>
     ce8:	b7 01       	movw	r22, r14
     cea:	80 e2       	ldi	r24, 0x20	; 32
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     cf2:	5a 94       	dec	r5
     cf4:	f6 cf       	rjmp	.-20     	; 0xce2 <__stack+0x3e3>
     cf6:	f7 01       	movw	r30, r14
     cf8:	86 81       	ldd	r24, Z+6	; 0x06
     cfa:	97 81       	ldd	r25, Z+7	; 0x07
     cfc:	26 c0       	rjmp	.+76     	; 0xd4a <__stack+0x44b>
     cfe:	8f ef       	ldi	r24, 0xFF	; 255
     d00:	9f ef       	ldi	r25, 0xFF	; 255
     d02:	23 c0       	rjmp	.+70     	; 0xd4a <__stack+0x44b>
     d04:	b7 01       	movw	r22, r14
     d06:	80 e2       	ldi	r24, 0x20	; 32
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     d0e:	5a 94       	dec	r5
     d10:	51 10       	cpse	r5, r1
     d12:	f8 cf       	rjmp	.-16     	; 0xd04 <__stack+0x405>
     d14:	d8 cf       	rjmp	.-80     	; 0xcc6 <__stack+0x3c7>
     d16:	51 2c       	mov	r5, r1
     d18:	b7 01       	movw	r22, r14
     d1a:	80 2f       	mov	r24, r16
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     d22:	d3 cf       	rjmp	.-90     	; 0xcca <__stack+0x3cb>
     d24:	08 eb       	ldi	r16, 0xB8	; 184
     d26:	10 e0       	ldi	r17, 0x00	; 0
     d28:	d5 cf       	rjmp	.-86     	; 0xcd4 <__stack+0x3d5>
     d2a:	91 10       	cpse	r9, r1
     d2c:	80 52       	subi	r24, 0x20	; 32
     d2e:	b7 01       	movw	r22, r14
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 18 08 	call	0x1030	; 0x1030 <fputc>
     d36:	0f 5f       	subi	r16, 0xFF	; 255
     d38:	1f 4f       	sbci	r17, 0xFF	; 255
     d3a:	cf cf       	rjmp	.-98     	; 0xcda <__stack+0x3db>
     d3c:	23 e0       	ldi	r18, 0x03	; 3
     d3e:	25 15       	cp	r18, r5
     d40:	10 f4       	brcc	.+4      	; 0xd46 <__stack+0x447>
     d42:	83 e0       	ldi	r24, 0x03	; 3
     d44:	bd cf       	rjmp	.-134    	; 0xcc0 <__stack+0x3c1>
     d46:	51 2c       	mov	r5, r1
     d48:	c0 cf       	rjmp	.-128    	; 0xcca <__stack+0x3cb>
     d4a:	60 96       	adiw	r28, 0x10	; 16
     d4c:	e2 e1       	ldi	r30, 0x12	; 18
     d4e:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__epilogue_restores__>

00000d52 <__divmodhi4>:
     d52:	97 fb       	bst	r25, 7
     d54:	07 2e       	mov	r0, r23
     d56:	16 f4       	brtc	.+4      	; 0xd5c <__divmodhi4+0xa>
     d58:	00 94       	com	r0
     d5a:	07 d0       	rcall	.+14     	; 0xd6a <__divmodhi4_neg1>
     d5c:	77 fd       	sbrc	r23, 7
     d5e:	09 d0       	rcall	.+18     	; 0xd72 <__divmodhi4_neg2>
     d60:	0e 94 16 07 	call	0xe2c	; 0xe2c <__udivmodhi4>
     d64:	07 fc       	sbrc	r0, 7
     d66:	05 d0       	rcall	.+10     	; 0xd72 <__divmodhi4_neg2>
     d68:	3e f4       	brtc	.+14     	; 0xd78 <__divmodhi4_exit>

00000d6a <__divmodhi4_neg1>:
     d6a:	90 95       	com	r25
     d6c:	81 95       	neg	r24
     d6e:	9f 4f       	sbci	r25, 0xFF	; 255
     d70:	08 95       	ret

00000d72 <__divmodhi4_neg2>:
     d72:	70 95       	com	r23
     d74:	61 95       	neg	r22
     d76:	7f 4f       	sbci	r23, 0xFF	; 255

00000d78 <__divmodhi4_exit>:
     d78:	08 95       	ret

00000d7a <__udivmodsi4>:
     d7a:	a1 e2       	ldi	r26, 0x21	; 33
     d7c:	1a 2e       	mov	r1, r26
     d7e:	aa 1b       	sub	r26, r26
     d80:	bb 1b       	sub	r27, r27
     d82:	fd 01       	movw	r30, r26
     d84:	0d c0       	rjmp	.+26     	; 0xda0 <__udivmodsi4_ep>

00000d86 <__udivmodsi4_loop>:
     d86:	aa 1f       	adc	r26, r26
     d88:	bb 1f       	adc	r27, r27
     d8a:	ee 1f       	adc	r30, r30
     d8c:	ff 1f       	adc	r31, r31
     d8e:	a2 17       	cp	r26, r18
     d90:	b3 07       	cpc	r27, r19
     d92:	e4 07       	cpc	r30, r20
     d94:	f5 07       	cpc	r31, r21
     d96:	20 f0       	brcs	.+8      	; 0xda0 <__udivmodsi4_ep>
     d98:	a2 1b       	sub	r26, r18
     d9a:	b3 0b       	sbc	r27, r19
     d9c:	e4 0b       	sbc	r30, r20
     d9e:	f5 0b       	sbc	r31, r21

00000da0 <__udivmodsi4_ep>:
     da0:	66 1f       	adc	r22, r22
     da2:	77 1f       	adc	r23, r23
     da4:	88 1f       	adc	r24, r24
     da6:	99 1f       	adc	r25, r25
     da8:	1a 94       	dec	r1
     daa:	69 f7       	brne	.-38     	; 0xd86 <__udivmodsi4_loop>
     dac:	60 95       	com	r22
     dae:	70 95       	com	r23
     db0:	80 95       	com	r24
     db2:	90 95       	com	r25
     db4:	9b 01       	movw	r18, r22
     db6:	ac 01       	movw	r20, r24
     db8:	bd 01       	movw	r22, r26
     dba:	cf 01       	movw	r24, r30
     dbc:	08 95       	ret

00000dbe <__prologue_saves__>:
     dbe:	2f 92       	push	r2
     dc0:	3f 92       	push	r3
     dc2:	4f 92       	push	r4
     dc4:	5f 92       	push	r5
     dc6:	6f 92       	push	r6
     dc8:	7f 92       	push	r7
     dca:	8f 92       	push	r8
     dcc:	9f 92       	push	r9
     dce:	af 92       	push	r10
     dd0:	bf 92       	push	r11
     dd2:	cf 92       	push	r12
     dd4:	df 92       	push	r13
     dd6:	ef 92       	push	r14
     dd8:	ff 92       	push	r15
     dda:	0f 93       	push	r16
     ddc:	1f 93       	push	r17
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	cd b7       	in	r28, 0x3d	; 61
     de4:	de b7       	in	r29, 0x3e	; 62
     de6:	ca 1b       	sub	r28, r26
     de8:	db 0b       	sbc	r29, r27
     dea:	0f b6       	in	r0, 0x3f	; 63
     dec:	f8 94       	cli
     dee:	de bf       	out	0x3e, r29	; 62
     df0:	0f be       	out	0x3f, r0	; 63
     df2:	cd bf       	out	0x3d, r28	; 61
     df4:	09 94       	ijmp

00000df6 <__epilogue_restores__>:
     df6:	2a 88       	ldd	r2, Y+18	; 0x12
     df8:	39 88       	ldd	r3, Y+17	; 0x11
     dfa:	48 88       	ldd	r4, Y+16	; 0x10
     dfc:	5f 84       	ldd	r5, Y+15	; 0x0f
     dfe:	6e 84       	ldd	r6, Y+14	; 0x0e
     e00:	7d 84       	ldd	r7, Y+13	; 0x0d
     e02:	8c 84       	ldd	r8, Y+12	; 0x0c
     e04:	9b 84       	ldd	r9, Y+11	; 0x0b
     e06:	aa 84       	ldd	r10, Y+10	; 0x0a
     e08:	b9 84       	ldd	r11, Y+9	; 0x09
     e0a:	c8 84       	ldd	r12, Y+8	; 0x08
     e0c:	df 80       	ldd	r13, Y+7	; 0x07
     e0e:	ee 80       	ldd	r14, Y+6	; 0x06
     e10:	fd 80       	ldd	r15, Y+5	; 0x05
     e12:	0c 81       	ldd	r16, Y+4	; 0x04
     e14:	1b 81       	ldd	r17, Y+3	; 0x03
     e16:	aa 81       	ldd	r26, Y+2	; 0x02
     e18:	b9 81       	ldd	r27, Y+1	; 0x01
     e1a:	ce 0f       	add	r28, r30
     e1c:	d1 1d       	adc	r29, r1
     e1e:	0f b6       	in	r0, 0x3f	; 63
     e20:	f8 94       	cli
     e22:	de bf       	out	0x3e, r29	; 62
     e24:	0f be       	out	0x3f, r0	; 63
     e26:	cd bf       	out	0x3d, r28	; 61
     e28:	ed 01       	movw	r28, r26
     e2a:	08 95       	ret

00000e2c <__udivmodhi4>:
     e2c:	aa 1b       	sub	r26, r26
     e2e:	bb 1b       	sub	r27, r27
     e30:	51 e1       	ldi	r21, 0x11	; 17
     e32:	07 c0       	rjmp	.+14     	; 0xe42 <__udivmodhi4_ep>

00000e34 <__udivmodhi4_loop>:
     e34:	aa 1f       	adc	r26, r26
     e36:	bb 1f       	adc	r27, r27
     e38:	a6 17       	cp	r26, r22
     e3a:	b7 07       	cpc	r27, r23
     e3c:	10 f0       	brcs	.+4      	; 0xe42 <__udivmodhi4_ep>
     e3e:	a6 1b       	sub	r26, r22
     e40:	b7 0b       	sbc	r27, r23

00000e42 <__udivmodhi4_ep>:
     e42:	88 1f       	adc	r24, r24
     e44:	99 1f       	adc	r25, r25
     e46:	5a 95       	dec	r21
     e48:	a9 f7       	brne	.-22     	; 0xe34 <__udivmodhi4_loop>
     e4a:	80 95       	com	r24
     e4c:	90 95       	com	r25
     e4e:	bc 01       	movw	r22, r24
     e50:	cd 01       	movw	r24, r26
     e52:	08 95       	ret

00000e54 <__ftoa_engine>:
     e54:	28 30       	cpi	r18, 0x08	; 8
     e56:	08 f0       	brcs	.+2      	; 0xe5a <__ftoa_engine+0x6>
     e58:	27 e0       	ldi	r18, 0x07	; 7
     e5a:	33 27       	eor	r19, r19
     e5c:	da 01       	movw	r26, r20
     e5e:	99 0f       	add	r25, r25
     e60:	31 1d       	adc	r19, r1
     e62:	87 fd       	sbrc	r24, 7
     e64:	91 60       	ori	r25, 0x01	; 1
     e66:	00 96       	adiw	r24, 0x00	; 0
     e68:	61 05       	cpc	r22, r1
     e6a:	71 05       	cpc	r23, r1
     e6c:	39 f4       	brne	.+14     	; 0xe7c <__ftoa_engine+0x28>
     e6e:	32 60       	ori	r19, 0x02	; 2
     e70:	2e 5f       	subi	r18, 0xFE	; 254
     e72:	3d 93       	st	X+, r19
     e74:	30 e3       	ldi	r19, 0x30	; 48
     e76:	2a 95       	dec	r18
     e78:	e1 f7       	brne	.-8      	; 0xe72 <__ftoa_engine+0x1e>
     e7a:	08 95       	ret
     e7c:	9f 3f       	cpi	r25, 0xFF	; 255
     e7e:	30 f0       	brcs	.+12     	; 0xe8c <__ftoa_engine+0x38>
     e80:	80 38       	cpi	r24, 0x80	; 128
     e82:	71 05       	cpc	r23, r1
     e84:	61 05       	cpc	r22, r1
     e86:	09 f0       	breq	.+2      	; 0xe8a <__ftoa_engine+0x36>
     e88:	3c 5f       	subi	r19, 0xFC	; 252
     e8a:	3c 5f       	subi	r19, 0xFC	; 252
     e8c:	3d 93       	st	X+, r19
     e8e:	91 30       	cpi	r25, 0x01	; 1
     e90:	08 f0       	brcs	.+2      	; 0xe94 <__ftoa_engine+0x40>
     e92:	80 68       	ori	r24, 0x80	; 128
     e94:	91 1d       	adc	r25, r1
     e96:	df 93       	push	r29
     e98:	cf 93       	push	r28
     e9a:	1f 93       	push	r17
     e9c:	0f 93       	push	r16
     e9e:	ff 92       	push	r15
     ea0:	ef 92       	push	r14
     ea2:	19 2f       	mov	r17, r25
     ea4:	98 7f       	andi	r25, 0xF8	; 248
     ea6:	96 95       	lsr	r25
     ea8:	e9 2f       	mov	r30, r25
     eaa:	96 95       	lsr	r25
     eac:	96 95       	lsr	r25
     eae:	e9 0f       	add	r30, r25
     eb0:	ff 27       	eor	r31, r31
     eb2:	ea 5e       	subi	r30, 0xEA	; 234
     eb4:	fe 4f       	sbci	r31, 0xFE	; 254
     eb6:	99 27       	eor	r25, r25
     eb8:	33 27       	eor	r19, r19
     eba:	ee 24       	eor	r14, r14
     ebc:	ff 24       	eor	r15, r15
     ebe:	a7 01       	movw	r20, r14
     ec0:	e7 01       	movw	r28, r14
     ec2:	05 90       	lpm	r0, Z+
     ec4:	08 94       	sec
     ec6:	07 94       	ror	r0
     ec8:	28 f4       	brcc	.+10     	; 0xed4 <__ftoa_engine+0x80>
     eca:	36 0f       	add	r19, r22
     ecc:	e7 1e       	adc	r14, r23
     ece:	f8 1e       	adc	r15, r24
     ed0:	49 1f       	adc	r20, r25
     ed2:	51 1d       	adc	r21, r1
     ed4:	66 0f       	add	r22, r22
     ed6:	77 1f       	adc	r23, r23
     ed8:	88 1f       	adc	r24, r24
     eda:	99 1f       	adc	r25, r25
     edc:	06 94       	lsr	r0
     ede:	a1 f7       	brne	.-24     	; 0xec8 <__ftoa_engine+0x74>
     ee0:	05 90       	lpm	r0, Z+
     ee2:	07 94       	ror	r0
     ee4:	28 f4       	brcc	.+10     	; 0xef0 <__ftoa_engine+0x9c>
     ee6:	e7 0e       	add	r14, r23
     ee8:	f8 1e       	adc	r15, r24
     eea:	49 1f       	adc	r20, r25
     eec:	56 1f       	adc	r21, r22
     eee:	c1 1d       	adc	r28, r1
     ef0:	77 0f       	add	r23, r23
     ef2:	88 1f       	adc	r24, r24
     ef4:	99 1f       	adc	r25, r25
     ef6:	66 1f       	adc	r22, r22
     ef8:	06 94       	lsr	r0
     efa:	a1 f7       	brne	.-24     	; 0xee4 <__ftoa_engine+0x90>
     efc:	05 90       	lpm	r0, Z+
     efe:	07 94       	ror	r0
     f00:	28 f4       	brcc	.+10     	; 0xf0c <__ftoa_engine+0xb8>
     f02:	f8 0e       	add	r15, r24
     f04:	49 1f       	adc	r20, r25
     f06:	56 1f       	adc	r21, r22
     f08:	c7 1f       	adc	r28, r23
     f0a:	d1 1d       	adc	r29, r1
     f0c:	88 0f       	add	r24, r24
     f0e:	99 1f       	adc	r25, r25
     f10:	66 1f       	adc	r22, r22
     f12:	77 1f       	adc	r23, r23
     f14:	06 94       	lsr	r0
     f16:	a1 f7       	brne	.-24     	; 0xf00 <__ftoa_engine+0xac>
     f18:	05 90       	lpm	r0, Z+
     f1a:	07 94       	ror	r0
     f1c:	20 f4       	brcc	.+8      	; 0xf26 <__ftoa_engine+0xd2>
     f1e:	49 0f       	add	r20, r25
     f20:	56 1f       	adc	r21, r22
     f22:	c7 1f       	adc	r28, r23
     f24:	d8 1f       	adc	r29, r24
     f26:	99 0f       	add	r25, r25
     f28:	66 1f       	adc	r22, r22
     f2a:	77 1f       	adc	r23, r23
     f2c:	88 1f       	adc	r24, r24
     f2e:	06 94       	lsr	r0
     f30:	a9 f7       	brne	.-22     	; 0xf1c <__ftoa_engine+0xc8>
     f32:	84 91       	lpm	r24, Z
     f34:	10 95       	com	r17
     f36:	17 70       	andi	r17, 0x07	; 7
     f38:	41 f0       	breq	.+16     	; 0xf4a <__ftoa_engine+0xf6>
     f3a:	d6 95       	lsr	r29
     f3c:	c7 95       	ror	r28
     f3e:	57 95       	ror	r21
     f40:	47 95       	ror	r20
     f42:	f7 94       	ror	r15
     f44:	e7 94       	ror	r14
     f46:	1a 95       	dec	r17
     f48:	c1 f7       	brne	.-16     	; 0xf3a <__ftoa_engine+0xe6>
     f4a:	ec eb       	ldi	r30, 0xBC	; 188
     f4c:	f0 e0       	ldi	r31, 0x00	; 0
     f4e:	68 94       	set
     f50:	15 90       	lpm	r1, Z+
     f52:	15 91       	lpm	r17, Z+
     f54:	35 91       	lpm	r19, Z+
     f56:	65 91       	lpm	r22, Z+
     f58:	95 91       	lpm	r25, Z+
     f5a:	05 90       	lpm	r0, Z+
     f5c:	7f e2       	ldi	r23, 0x2F	; 47
     f5e:	73 95       	inc	r23
     f60:	e1 18       	sub	r14, r1
     f62:	f1 0a       	sbc	r15, r17
     f64:	43 0b       	sbc	r20, r19
     f66:	56 0b       	sbc	r21, r22
     f68:	c9 0b       	sbc	r28, r25
     f6a:	d0 09       	sbc	r29, r0
     f6c:	c0 f7       	brcc	.-16     	; 0xf5e <__ftoa_engine+0x10a>
     f6e:	e1 0c       	add	r14, r1
     f70:	f1 1e       	adc	r15, r17
     f72:	43 1f       	adc	r20, r19
     f74:	56 1f       	adc	r21, r22
     f76:	c9 1f       	adc	r28, r25
     f78:	d0 1d       	adc	r29, r0
     f7a:	7e f4       	brtc	.+30     	; 0xf9a <__ftoa_engine+0x146>
     f7c:	70 33       	cpi	r23, 0x30	; 48
     f7e:	11 f4       	brne	.+4      	; 0xf84 <__ftoa_engine+0x130>
     f80:	8a 95       	dec	r24
     f82:	e6 cf       	rjmp	.-52     	; 0xf50 <__ftoa_engine+0xfc>
     f84:	e8 94       	clt
     f86:	01 50       	subi	r16, 0x01	; 1
     f88:	30 f0       	brcs	.+12     	; 0xf96 <__ftoa_engine+0x142>
     f8a:	08 0f       	add	r16, r24
     f8c:	0a f4       	brpl	.+2      	; 0xf90 <__ftoa_engine+0x13c>
     f8e:	00 27       	eor	r16, r16
     f90:	02 17       	cp	r16, r18
     f92:	08 f4       	brcc	.+2      	; 0xf96 <__ftoa_engine+0x142>
     f94:	20 2f       	mov	r18, r16
     f96:	23 95       	inc	r18
     f98:	02 2f       	mov	r16, r18
     f9a:	7a 33       	cpi	r23, 0x3A	; 58
     f9c:	28 f0       	brcs	.+10     	; 0xfa8 <__ftoa_engine+0x154>
     f9e:	79 e3       	ldi	r23, 0x39	; 57
     fa0:	7d 93       	st	X+, r23
     fa2:	2a 95       	dec	r18
     fa4:	e9 f7       	brne	.-6      	; 0xfa0 <__ftoa_engine+0x14c>
     fa6:	10 c0       	rjmp	.+32     	; 0xfc8 <__ftoa_engine+0x174>
     fa8:	7d 93       	st	X+, r23
     faa:	2a 95       	dec	r18
     fac:	89 f6       	brne	.-94     	; 0xf50 <__ftoa_engine+0xfc>
     fae:	06 94       	lsr	r0
     fb0:	97 95       	ror	r25
     fb2:	67 95       	ror	r22
     fb4:	37 95       	ror	r19
     fb6:	17 95       	ror	r17
     fb8:	17 94       	ror	r1
     fba:	e1 18       	sub	r14, r1
     fbc:	f1 0a       	sbc	r15, r17
     fbe:	43 0b       	sbc	r20, r19
     fc0:	56 0b       	sbc	r21, r22
     fc2:	c9 0b       	sbc	r28, r25
     fc4:	d0 09       	sbc	r29, r0
     fc6:	98 f0       	brcs	.+38     	; 0xfee <__ftoa_engine+0x19a>
     fc8:	23 95       	inc	r18
     fca:	7e 91       	ld	r23, -X
     fcc:	73 95       	inc	r23
     fce:	7a 33       	cpi	r23, 0x3A	; 58
     fd0:	08 f0       	brcs	.+2      	; 0xfd4 <__ftoa_engine+0x180>
     fd2:	70 e3       	ldi	r23, 0x30	; 48
     fd4:	7c 93       	st	X, r23
     fd6:	20 13       	cpse	r18, r16
     fd8:	b8 f7       	brcc	.-18     	; 0xfc8 <__ftoa_engine+0x174>
     fda:	7e 91       	ld	r23, -X
     fdc:	70 61       	ori	r23, 0x10	; 16
     fde:	7d 93       	st	X+, r23
     fe0:	30 f0       	brcs	.+12     	; 0xfee <__ftoa_engine+0x19a>
     fe2:	83 95       	inc	r24
     fe4:	71 e3       	ldi	r23, 0x31	; 49
     fe6:	7d 93       	st	X+, r23
     fe8:	70 e3       	ldi	r23, 0x30	; 48
     fea:	2a 95       	dec	r18
     fec:	e1 f7       	brne	.-8      	; 0xfe6 <__ftoa_engine+0x192>
     fee:	11 24       	eor	r1, r1
     ff0:	ef 90       	pop	r14
     ff2:	ff 90       	pop	r15
     ff4:	0f 91       	pop	r16
     ff6:	1f 91       	pop	r17
     ff8:	cf 91       	pop	r28
     ffa:	df 91       	pop	r29
     ffc:	99 27       	eor	r25, r25
     ffe:	87 fd       	sbrc	r24, 7
    1000:	90 95       	com	r25
    1002:	08 95       	ret

00001004 <strnlen_P>:
    1004:	fc 01       	movw	r30, r24
    1006:	05 90       	lpm	r0, Z+
    1008:	61 50       	subi	r22, 0x01	; 1
    100a:	70 40       	sbci	r23, 0x00	; 0
    100c:	01 10       	cpse	r0, r1
    100e:	d8 f7       	brcc	.-10     	; 0x1006 <strnlen_P+0x2>
    1010:	80 95       	com	r24
    1012:	90 95       	com	r25
    1014:	8e 0f       	add	r24, r30
    1016:	9f 1f       	adc	r25, r31
    1018:	08 95       	ret

0000101a <strnlen>:
    101a:	fc 01       	movw	r30, r24
    101c:	61 50       	subi	r22, 0x01	; 1
    101e:	70 40       	sbci	r23, 0x00	; 0
    1020:	01 90       	ld	r0, Z+
    1022:	01 10       	cpse	r0, r1
    1024:	d8 f7       	brcc	.-10     	; 0x101c <strnlen+0x2>
    1026:	80 95       	com	r24
    1028:	90 95       	com	r25
    102a:	8e 0f       	add	r24, r30
    102c:	9f 1f       	adc	r25, r31
    102e:	08 95       	ret

00001030 <fputc>:
    1030:	0f 93       	push	r16
    1032:	1f 93       	push	r17
    1034:	cf 93       	push	r28
    1036:	df 93       	push	r29
    1038:	fb 01       	movw	r30, r22
    103a:	23 81       	ldd	r18, Z+3	; 0x03
    103c:	21 fd       	sbrc	r18, 1
    103e:	03 c0       	rjmp	.+6      	; 0x1046 <fputc+0x16>
    1040:	8f ef       	ldi	r24, 0xFF	; 255
    1042:	9f ef       	ldi	r25, 0xFF	; 255
    1044:	2c c0       	rjmp	.+88     	; 0x109e <fputc+0x6e>
    1046:	22 ff       	sbrs	r18, 2
    1048:	16 c0       	rjmp	.+44     	; 0x1076 <fputc+0x46>
    104a:	46 81       	ldd	r20, Z+6	; 0x06
    104c:	57 81       	ldd	r21, Z+7	; 0x07
    104e:	24 81       	ldd	r18, Z+4	; 0x04
    1050:	35 81       	ldd	r19, Z+5	; 0x05
    1052:	42 17       	cp	r20, r18
    1054:	53 07       	cpc	r21, r19
    1056:	44 f4       	brge	.+16     	; 0x1068 <fputc+0x38>
    1058:	a0 81       	ld	r26, Z
    105a:	b1 81       	ldd	r27, Z+1	; 0x01
    105c:	9d 01       	movw	r18, r26
    105e:	2f 5f       	subi	r18, 0xFF	; 255
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	31 83       	std	Z+1, r19	; 0x01
    1064:	20 83       	st	Z, r18
    1066:	8c 93       	st	X, r24
    1068:	26 81       	ldd	r18, Z+6	; 0x06
    106a:	37 81       	ldd	r19, Z+7	; 0x07
    106c:	2f 5f       	subi	r18, 0xFF	; 255
    106e:	3f 4f       	sbci	r19, 0xFF	; 255
    1070:	37 83       	std	Z+7, r19	; 0x07
    1072:	26 83       	std	Z+6, r18	; 0x06
    1074:	14 c0       	rjmp	.+40     	; 0x109e <fputc+0x6e>
    1076:	8b 01       	movw	r16, r22
    1078:	ec 01       	movw	r28, r24
    107a:	fb 01       	movw	r30, r22
    107c:	00 84       	ldd	r0, Z+8	; 0x08
    107e:	f1 85       	ldd	r31, Z+9	; 0x09
    1080:	e0 2d       	mov	r30, r0
    1082:	09 95       	icall
    1084:	89 2b       	or	r24, r25
    1086:	e1 f6       	brne	.-72     	; 0x1040 <fputc+0x10>
    1088:	d8 01       	movw	r26, r16
    108a:	16 96       	adiw	r26, 0x06	; 6
    108c:	8d 91       	ld	r24, X+
    108e:	9c 91       	ld	r25, X
    1090:	17 97       	sbiw	r26, 0x07	; 7
    1092:	01 96       	adiw	r24, 0x01	; 1
    1094:	17 96       	adiw	r26, 0x07	; 7
    1096:	9c 93       	st	X, r25
    1098:	8e 93       	st	-X, r24
    109a:	16 97       	sbiw	r26, 0x06	; 6
    109c:	ce 01       	movw	r24, r28
    109e:	df 91       	pop	r29
    10a0:	cf 91       	pop	r28
    10a2:	1f 91       	pop	r17
    10a4:	0f 91       	pop	r16
    10a6:	08 95       	ret

000010a8 <snprintf>:
    10a8:	ae e0       	ldi	r26, 0x0E	; 14
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	ea e5       	ldi	r30, 0x5A	; 90
    10ae:	f8 e0       	ldi	r31, 0x08	; 8
    10b0:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__prologue_saves__+0x1c>
    10b4:	0d 89       	ldd	r16, Y+21	; 0x15
    10b6:	1e 89       	ldd	r17, Y+22	; 0x16
    10b8:	8f 89       	ldd	r24, Y+23	; 0x17
    10ba:	98 8d       	ldd	r25, Y+24	; 0x18
    10bc:	26 e0       	ldi	r18, 0x06	; 6
    10be:	2c 83       	std	Y+4, r18	; 0x04
    10c0:	1a 83       	std	Y+2, r17	; 0x02
    10c2:	09 83       	std	Y+1, r16	; 0x01
    10c4:	97 ff       	sbrs	r25, 7
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <snprintf+0x24>
    10c8:	80 e0       	ldi	r24, 0x00	; 0
    10ca:	90 e8       	ldi	r25, 0x80	; 128
    10cc:	01 97       	sbiw	r24, 0x01	; 1
    10ce:	9e 83       	std	Y+6, r25	; 0x06
    10d0:	8d 83       	std	Y+5, r24	; 0x05
    10d2:	ae 01       	movw	r20, r28
    10d4:	45 5e       	subi	r20, 0xE5	; 229
    10d6:	5f 4f       	sbci	r21, 0xFF	; 255
    10d8:	69 8d       	ldd	r22, Y+25	; 0x19
    10da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10dc:	ce 01       	movw	r24, r28
    10de:	01 96       	adiw	r24, 0x01	; 1
    10e0:	0e 94 2c 03 	call	0x658	; 0x658 <vfprintf>
    10e4:	4d 81       	ldd	r20, Y+5	; 0x05
    10e6:	5e 81       	ldd	r21, Y+6	; 0x06
    10e8:	57 fd       	sbrc	r21, 7
    10ea:	0a c0       	rjmp	.+20     	; 0x1100 <snprintf+0x58>
    10ec:	2f 81       	ldd	r18, Y+7	; 0x07
    10ee:	38 85       	ldd	r19, Y+8	; 0x08
    10f0:	42 17       	cp	r20, r18
    10f2:	53 07       	cpc	r21, r19
    10f4:	0c f4       	brge	.+2      	; 0x10f8 <snprintf+0x50>
    10f6:	9a 01       	movw	r18, r20
    10f8:	f8 01       	movw	r30, r16
    10fa:	e2 0f       	add	r30, r18
    10fc:	f3 1f       	adc	r31, r19
    10fe:	10 82       	st	Z, r1
    1100:	2e 96       	adiw	r28, 0x0e	; 14
    1102:	e4 e0       	ldi	r30, 0x04	; 4
    1104:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__epilogue_restores__+0x1c>

00001108 <__ultoa_invert>:
    1108:	fa 01       	movw	r30, r20
    110a:	aa 27       	eor	r26, r26
    110c:	28 30       	cpi	r18, 0x08	; 8
    110e:	51 f1       	breq	.+84     	; 0x1164 <__ultoa_invert+0x5c>
    1110:	20 31       	cpi	r18, 0x10	; 16
    1112:	81 f1       	breq	.+96     	; 0x1174 <__ultoa_invert+0x6c>
    1114:	e8 94       	clt
    1116:	6f 93       	push	r22
    1118:	6e 7f       	andi	r22, 0xFE	; 254
    111a:	6e 5f       	subi	r22, 0xFE	; 254
    111c:	7f 4f       	sbci	r23, 0xFF	; 255
    111e:	8f 4f       	sbci	r24, 0xFF	; 255
    1120:	9f 4f       	sbci	r25, 0xFF	; 255
    1122:	af 4f       	sbci	r26, 0xFF	; 255
    1124:	b1 e0       	ldi	r27, 0x01	; 1
    1126:	3e d0       	rcall	.+124    	; 0x11a4 <__ultoa_invert+0x9c>
    1128:	b4 e0       	ldi	r27, 0x04	; 4
    112a:	3c d0       	rcall	.+120    	; 0x11a4 <__ultoa_invert+0x9c>
    112c:	67 0f       	add	r22, r23
    112e:	78 1f       	adc	r23, r24
    1130:	89 1f       	adc	r24, r25
    1132:	9a 1f       	adc	r25, r26
    1134:	a1 1d       	adc	r26, r1
    1136:	68 0f       	add	r22, r24
    1138:	79 1f       	adc	r23, r25
    113a:	8a 1f       	adc	r24, r26
    113c:	91 1d       	adc	r25, r1
    113e:	a1 1d       	adc	r26, r1
    1140:	6a 0f       	add	r22, r26
    1142:	71 1d       	adc	r23, r1
    1144:	81 1d       	adc	r24, r1
    1146:	91 1d       	adc	r25, r1
    1148:	a1 1d       	adc	r26, r1
    114a:	20 d0       	rcall	.+64     	; 0x118c <__ultoa_invert+0x84>
    114c:	09 f4       	brne	.+2      	; 0x1150 <__ultoa_invert+0x48>
    114e:	68 94       	set
    1150:	3f 91       	pop	r19
    1152:	2a e0       	ldi	r18, 0x0A	; 10
    1154:	26 9f       	mul	r18, r22
    1156:	11 24       	eor	r1, r1
    1158:	30 19       	sub	r19, r0
    115a:	30 5d       	subi	r19, 0xD0	; 208
    115c:	31 93       	st	Z+, r19
    115e:	de f6       	brtc	.-74     	; 0x1116 <__ultoa_invert+0xe>
    1160:	cf 01       	movw	r24, r30
    1162:	08 95       	ret
    1164:	46 2f       	mov	r20, r22
    1166:	47 70       	andi	r20, 0x07	; 7
    1168:	40 5d       	subi	r20, 0xD0	; 208
    116a:	41 93       	st	Z+, r20
    116c:	b3 e0       	ldi	r27, 0x03	; 3
    116e:	0f d0       	rcall	.+30     	; 0x118e <__ultoa_invert+0x86>
    1170:	c9 f7       	brne	.-14     	; 0x1164 <__ultoa_invert+0x5c>
    1172:	f6 cf       	rjmp	.-20     	; 0x1160 <__ultoa_invert+0x58>
    1174:	46 2f       	mov	r20, r22
    1176:	4f 70       	andi	r20, 0x0F	; 15
    1178:	40 5d       	subi	r20, 0xD0	; 208
    117a:	4a 33       	cpi	r20, 0x3A	; 58
    117c:	18 f0       	brcs	.+6      	; 0x1184 <__ultoa_invert+0x7c>
    117e:	49 5d       	subi	r20, 0xD9	; 217
    1180:	31 fd       	sbrc	r19, 1
    1182:	40 52       	subi	r20, 0x20	; 32
    1184:	41 93       	st	Z+, r20
    1186:	02 d0       	rcall	.+4      	; 0x118c <__ultoa_invert+0x84>
    1188:	a9 f7       	brne	.-22     	; 0x1174 <__ultoa_invert+0x6c>
    118a:	ea cf       	rjmp	.-44     	; 0x1160 <__ultoa_invert+0x58>
    118c:	b4 e0       	ldi	r27, 0x04	; 4
    118e:	a6 95       	lsr	r26
    1190:	97 95       	ror	r25
    1192:	87 95       	ror	r24
    1194:	77 95       	ror	r23
    1196:	67 95       	ror	r22
    1198:	ba 95       	dec	r27
    119a:	c9 f7       	brne	.-14     	; 0x118e <__ultoa_invert+0x86>
    119c:	00 97       	sbiw	r24, 0x00	; 0
    119e:	61 05       	cpc	r22, r1
    11a0:	71 05       	cpc	r23, r1
    11a2:	08 95       	ret
    11a4:	9b 01       	movw	r18, r22
    11a6:	ac 01       	movw	r20, r24
    11a8:	0a 2e       	mov	r0, r26
    11aa:	06 94       	lsr	r0
    11ac:	57 95       	ror	r21
    11ae:	47 95       	ror	r20
    11b0:	37 95       	ror	r19
    11b2:	27 95       	ror	r18
    11b4:	ba 95       	dec	r27
    11b6:	c9 f7       	brne	.-14     	; 0x11aa <__ultoa_invert+0xa2>
    11b8:	62 0f       	add	r22, r18
    11ba:	73 1f       	adc	r23, r19
    11bc:	84 1f       	adc	r24, r20
    11be:	95 1f       	adc	r25, r21
    11c0:	a0 1d       	adc	r26, r0
    11c2:	08 95       	ret

000011c4 <_exit>:
    11c4:	f8 94       	cli

000011c6 <__stop_program>:
    11c6:	ff cf       	rjmp	.-2      	; 0x11c6 <__stop_program>
